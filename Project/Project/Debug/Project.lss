
Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000004a0  00000514  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004a0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000051e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000550  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000590  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000114d  00000000  00000000  000005d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008fe  00000000  00000000  00001725  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000071b  00000000  00000000  00002023  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  00002740  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000458  00000000  00000000  000027d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000ac1  00000000  00000000  00002c30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000036f1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 ea       	ldi	r30, 0xA0	; 160
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 30       	cpi	r26, 0x0A	; 10
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	91 d0       	rcall	.+290    	; 0x1d6 <main>
  b4:	f3 c1       	rjmp	.+998    	; 0x49c <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <COMMAND>:
	unsigned char i;
	for(i=0;i<n;i++)
	{
		DATA(font[i]);
	}
}
  b8:	ef e3       	ldi	r30, 0x3F	; 63
  ba:	ff e1       	ldi	r31, 0x1F	; 31
  bc:	31 97       	sbiw	r30, 0x01	; 1
  be:	f1 f7       	brne	.-4      	; 0xbc <COMMAND+0x4>
  c0:	00 c0       	rjmp	.+0      	; 0xc2 <COMMAND+0xa>
  c2:	00 00       	nop
  c4:	98 2f       	mov	r25, r24
  c6:	90 7f       	andi	r25, 0xF0	; 240
  c8:	95 bb       	out	0x15, r25	; 21
  ca:	95 b3       	in	r25, 0x15	; 21
  cc:	9e 7f       	andi	r25, 0xFE	; 254
  ce:	95 bb       	out	0x15, r25	; 21
  d0:	95 b3       	in	r25, 0x15	; 21
  d2:	9d 7f       	andi	r25, 0xFD	; 253
  d4:	95 bb       	out	0x15, r25	; 21
  d6:	f5 e0       	ldi	r31, 0x05	; 5
  d8:	fa 95       	dec	r31
  da:	f1 f7       	brne	.-4      	; 0xd8 <COMMAND+0x20>
  dc:	00 00       	nop
  de:	95 b3       	in	r25, 0x15	; 21
  e0:	94 60       	ori	r25, 0x04	; 4
  e2:	95 bb       	out	0x15, r25	; 21
  e4:	25 e0       	ldi	r18, 0x05	; 5
  e6:	2a 95       	dec	r18
  e8:	f1 f7       	brne	.-4      	; 0xe6 <COMMAND+0x2e>
  ea:	00 00       	nop
  ec:	95 b3       	in	r25, 0x15	; 21
  ee:	9b 7f       	andi	r25, 0xFB	; 251
  f0:	95 bb       	out	0x15, r25	; 21
  f2:	e0 e1       	ldi	r30, 0x10	; 16
  f4:	8e 9f       	mul	r24, r30
  f6:	c0 01       	movw	r24, r0
  f8:	11 24       	eor	r1, r1
  fa:	85 bb       	out	0x15, r24	; 21
  fc:	85 b3       	in	r24, 0x15	; 21
  fe:	8e 7f       	andi	r24, 0xFE	; 254
 100:	85 bb       	out	0x15, r24	; 21
 102:	85 b3       	in	r24, 0x15	; 21
 104:	8d 7f       	andi	r24, 0xFD	; 253
 106:	85 bb       	out	0x15, r24	; 21
 108:	f5 e0       	ldi	r31, 0x05	; 5
 10a:	fa 95       	dec	r31
 10c:	f1 f7       	brne	.-4      	; 0x10a <COMMAND+0x52>
 10e:	00 00       	nop
 110:	85 b3       	in	r24, 0x15	; 21
 112:	84 60       	ori	r24, 0x04	; 4
 114:	85 bb       	out	0x15, r24	; 21
 116:	25 e0       	ldi	r18, 0x05	; 5
 118:	2a 95       	dec	r18
 11a:	f1 f7       	brne	.-4      	; 0x118 <COMMAND+0x60>
 11c:	00 00       	nop
 11e:	85 b3       	in	r24, 0x15	; 21
 120:	8b 7f       	andi	r24, 0xFB	; 251
 122:	85 bb       	out	0x15, r24	; 21
 124:	08 95       	ret

00000126 <MOVE>:
 126:	01 97       	sbiw	r24, 0x01	; 1
 128:	19 f4       	brne	.+6      	; 0x130 <MOVE+0xa>
 12a:	8f e7       	ldi	r24, 0x7F	; 127
 12c:	86 0f       	add	r24, r22
 12e:	02 c0       	rjmp	.+4      	; 0x134 <MOVE+0xe>
 130:	8f eb       	ldi	r24, 0xBF	; 191
 132:	86 0f       	add	r24, r22
 134:	c1 cf       	rjmp	.-126    	; 0xb8 <COMMAND>
 136:	08 95       	ret

00000138 <LCD_INIT>:
 138:	2f ef       	ldi	r18, 0xFF	; 255
 13a:	86 e7       	ldi	r24, 0x76	; 118
 13c:	91 e0       	ldi	r25, 0x01	; 1
 13e:	21 50       	subi	r18, 0x01	; 1
 140:	80 40       	sbci	r24, 0x00	; 0
 142:	90 40       	sbci	r25, 0x00	; 0
 144:	e1 f7       	brne	.-8      	; 0x13e <LCD_INIT+0x6>
 146:	00 c0       	rjmp	.+0      	; 0x148 <LCD_INIT+0x10>
 148:	00 00       	nop
 14a:	88 e2       	ldi	r24, 0x28	; 40
 14c:	b5 df       	rcall	.-150    	; 0xb8 <COMMAND>
 14e:	8c e0       	ldi	r24, 0x0C	; 12
 150:	b3 df       	rcall	.-154    	; 0xb8 <COMMAND>
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	b1 df       	rcall	.-158    	; 0xb8 <COMMAND>
 156:	87 ee       	ldi	r24, 0xE7	; 231
 158:	97 e1       	ldi	r25, 0x17	; 23
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	f1 f7       	brne	.-4      	; 0x15a <LCD_INIT+0x22>
 15e:	00 c0       	rjmp	.+0      	; 0x160 <LCD_INIT+0x28>
 160:	00 00       	nop
 162:	86 e0       	ldi	r24, 0x06	; 6
 164:	a9 cf       	rjmp	.-174    	; 0xb8 <COMMAND>
 166:	08 95       	ret

00000168 <DATA>:
 168:	ef e3       	ldi	r30, 0x3F	; 63
 16a:	ff e1       	ldi	r31, 0x1F	; 31
 16c:	31 97       	sbiw	r30, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <DATA+0x4>
 170:	00 c0       	rjmp	.+0      	; 0x172 <DATA+0xa>
 172:	00 00       	nop
 174:	98 2f       	mov	r25, r24
 176:	90 7f       	andi	r25, 0xF0	; 240
 178:	95 bb       	out	0x15, r25	; 21
 17a:	95 b3       	in	r25, 0x15	; 21
 17c:	91 60       	ori	r25, 0x01	; 1
 17e:	95 bb       	out	0x15, r25	; 21
 180:	95 b3       	in	r25, 0x15	; 21
 182:	9d 7f       	andi	r25, 0xFD	; 253
 184:	95 bb       	out	0x15, r25	; 21
 186:	f5 e0       	ldi	r31, 0x05	; 5
 188:	fa 95       	dec	r31
 18a:	f1 f7       	brne	.-4      	; 0x188 <DATA+0x20>
 18c:	00 00       	nop
 18e:	95 b3       	in	r25, 0x15	; 21
 190:	94 60       	ori	r25, 0x04	; 4
 192:	95 bb       	out	0x15, r25	; 21
 194:	25 e0       	ldi	r18, 0x05	; 5
 196:	2a 95       	dec	r18
 198:	f1 f7       	brne	.-4      	; 0x196 <DATA+0x2e>
 19a:	00 00       	nop
 19c:	95 b3       	in	r25, 0x15	; 21
 19e:	9b 7f       	andi	r25, 0xFB	; 251
 1a0:	95 bb       	out	0x15, r25	; 21
 1a2:	e0 e1       	ldi	r30, 0x10	; 16
 1a4:	8e 9f       	mul	r24, r30
 1a6:	c0 01       	movw	r24, r0
 1a8:	11 24       	eor	r1, r1
 1aa:	85 bb       	out	0x15, r24	; 21
 1ac:	85 b3       	in	r24, 0x15	; 21
 1ae:	81 60       	ori	r24, 0x01	; 1
 1b0:	85 bb       	out	0x15, r24	; 21
 1b2:	85 b3       	in	r24, 0x15	; 21
 1b4:	8d 7f       	andi	r24, 0xFD	; 253
 1b6:	85 bb       	out	0x15, r24	; 21
 1b8:	f5 e0       	ldi	r31, 0x05	; 5
 1ba:	fa 95       	dec	r31
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <DATA+0x52>
 1be:	00 00       	nop
 1c0:	85 b3       	in	r24, 0x15	; 21
 1c2:	84 60       	ori	r24, 0x04	; 4
 1c4:	85 bb       	out	0x15, r24	; 21
 1c6:	25 e0       	ldi	r18, 0x05	; 5
 1c8:	2a 95       	dec	r18
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <DATA+0x60>
 1cc:	00 00       	nop
 1ce:	85 b3       	in	r24, 0x15	; 21
 1d0:	8b 7f       	andi	r24, 0xFB	; 251
 1d2:	85 bb       	out	0x15, r24	; 21
 1d4:	08 95       	ret

000001d6 <main>:
	PORTC &= 0b11111011;		// E = 0
}


int main(void)
{
 1d6:	cf 93       	push	r28
 1d8:	df 93       	push	r29
 1da:	cd b7       	in	r28, 0x3d	; 61
 1dc:	de b7       	in	r29, 0x3e	; 62
 1de:	68 97       	sbiw	r28, 0x18	; 24
 1e0:	0f b6       	in	r0, 0x3f	; 63
 1e2:	f8 94       	cli
 1e4:	de bf       	out	0x3e, r29	; 62
 1e6:	0f be       	out	0x3f, r0	; 63
 1e8:	cd bf       	out	0x3d, r28	; 61
	unsigned char sw3=0;
	unsigned char sw4=0;
	unsigned char sw5=0;
	unsigned char sw6=0;
	unsigned char sw7=0;
	int leds[7] = {0, 0, 0, 0, 0, 0, 0};
 1ea:	fe 01       	movw	r30, r28
 1ec:	31 96       	adiw	r30, 0x01	; 1
 1ee:	8e e0       	ldi	r24, 0x0E	; 14
 1f0:	df 01       	movw	r26, r30
 1f2:	1d 92       	st	X+, r1
 1f4:	8a 95       	dec	r24
 1f6:	e9 f7       	brne	.-6      	; 0x1f2 <main+0x1c>
	unsigned int t = 2;
	DDRC = 0xff; //lcd
 1f8:	8f ef       	ldi	r24, 0xFF	; 255
 1fa:	84 bb       	out	0x14, r24	; 20
	DDRE = 0xFF; //led
 1fc:	82 b9       	out	0x02, r24	; 2
	DDRA = 0xFF;
 1fe:	8a bb       	out	0x1a, r24	; 26
	PORTA = 0x00;
 200:	1b ba       	out	0x1b, r1	; 27
	PORTC = 0x00; //lcd
 202:	15 ba       	out	0x15, r1	; 21
	DDRE = 0x00; //스위치
 204:	12 b8       	out	0x02, r1	; 2
	
	unsigned char fnd[10] = {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xd8, 0x80, 0x90};
 206:	9a e0       	ldi	r25, 0x0A	; 10
 208:	e0 e0       	ldi	r30, 0x00	; 0
 20a:	f1 e0       	ldi	r31, 0x01	; 1
 20c:	de 01       	movw	r26, r28
 20e:	1f 96       	adiw	r26, 0x0f	; 15
 210:	01 90       	ld	r0, Z+
 212:	0d 92       	st	X+, r0
 214:	9a 95       	dec	r25
 216:	e1 f7       	brne	.-8      	; 0x210 <main+0x3a>
	unsigned char digit, fnd_position=0x01;
	
	DDRB=0xFF;
 218:	87 bb       	out	0x17, r24	; 23
	DDRD=0x0F;
 21a:	9f e0       	ldi	r25, 0x0F	; 15
 21c:	91 bb       	out	0x11, r25	; 17
	PORTB=0xFF;
 21e:	88 bb       	out	0x18, r24	; 24
	PORTD=0x0F;
 220:	92 bb       	out	0x12, r25	; 18
	
	LCD_INIT(); //lcd초기
 222:	8a df       	rcall	.-236    	; 0x138 <LCD_INIT>
	PORTA = 0x00;
	PORTC = 0x00; //lcd
	DDRE = 0x00; //스위치
	
	unsigned char fnd[10] = {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xd8, 0x80, 0x90};
	unsigned char digit, fnd_position=0x01;
 224:	11 e0       	ldi	r17, 0x01	; 1
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
	unsigned char sw4=0;
	unsigned char sw5=0;
	unsigned char sw6=0;
 226:	91 2c       	mov	r9, r1
{
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
	unsigned char sw4=0;
	unsigned char sw5=0;
 228:	a1 2c       	mov	r10, r1
int main(void)
{
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
	unsigned char sw4=0;
 22a:	b1 2c       	mov	r11, r1

int main(void)
{
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
 22c:	c1 2c       	mov	r12, r1


int main(void)
{
	unsigned char sw1=0;
	unsigned char sw2=0;
 22e:	d1 2c       	mov	r13, r1
}


int main(void)
{
	unsigned char sw1=0;
 230:	00 e0       	ldi	r16, 0x00	; 0
	
	LCD_INIT(); //lcd초기
	
	while(1)
	{
		for(digit=0;digit<10;digit++)
 232:	80 e0       	ldi	r24, 0x00	; 0
 234:	17 c0       	rjmp	.+46     	; 0x264 <main+0x8e>
		{
			PORTD=fnd_position;
 236:	12 bb       	out	0x12, r17	; 18
			fnd_position<<=1;
 238:	11 0f       	add	r17, r17
			
			if(fnd_position==0x10)
 23a:	10 31       	cpi	r17, 0x10	; 16
 23c:	09 f4       	brne	.+2      	; 0x240 <main+0x6a>
			fnd_position=0x01;
 23e:	11 e0       	ldi	r17, 0x01	; 1
			
			PORTB=fnd[digit];
 240:	ef e0       	ldi	r30, 0x0F	; 15
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	ec 0f       	add	r30, r28
 246:	fd 1f       	adc	r31, r29
 248:	e8 0f       	add	r30, r24
 24a:	f1 1d       	adc	r31, r1
 24c:	90 81       	ld	r25, Z
 24e:	98 bb       	out	0x18, r25	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 250:	bf ef       	ldi	r27, 0xFF	; 255
 252:	e3 ed       	ldi	r30, 0xD3	; 211
 254:	f0 e3       	ldi	r31, 0x30	; 48
 256:	b1 50       	subi	r27, 0x01	; 1
 258:	e0 40       	sbci	r30, 0x00	; 0
 25a:	f0 40       	sbci	r31, 0x00	; 0
 25c:	e1 f7       	brne	.-8      	; 0x256 <main+0x80>
 25e:	00 c0       	rjmp	.+0      	; 0x260 <main+0x8a>
 260:	00 00       	nop
	
	LCD_INIT(); //lcd초기
	
	while(1)
	{
		for(digit=0;digit<10;digit++)
 262:	8f 5f       	subi	r24, 0xFF	; 255
 264:	8a 30       	cpi	r24, 0x0A	; 10
 266:	38 f3       	brcs	.-50     	; 0x236 <main+0x60>
		}
		
		
		sw7=0;
		//스위치
		if((PINE&0x01) == 0x00) {
 268:	08 99       	sbic	0x01, 0	; 1
 26a:	03 c0       	rjmp	.+6      	; 0x272 <main+0x9c>
			sw1 = 1 - sw1;
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	80 1b       	sub	r24, r16
 270:	08 2f       	mov	r16, r24
		}
		if((PINE&0x02) == 0x00) {
 272:	09 99       	sbic	0x01, 1	; 1
 274:	03 c0       	rjmp	.+6      	; 0x27c <main+0xa6>
			sw2 = 1 - sw2;
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	8d 19       	sub	r24, r13
 27a:	d8 2e       	mov	r13, r24
		}
		if((PINE&0x04) == 0x00) {
 27c:	0a 99       	sbic	0x01, 2	; 1
 27e:	03 c0       	rjmp	.+6      	; 0x286 <main+0xb0>
			sw3 = 1 - sw3;
 280:	81 e0       	ldi	r24, 0x01	; 1
 282:	8c 19       	sub	r24, r12
 284:	c8 2e       	mov	r12, r24
		}
		if((PINE&0x08) == 0x00) {
 286:	0b 99       	sbic	0x01, 3	; 1
 288:	03 c0       	rjmp	.+6      	; 0x290 <main+0xba>
			sw4 = 1 - sw4;
 28a:	81 e0       	ldi	r24, 0x01	; 1
 28c:	8b 19       	sub	r24, r11
 28e:	b8 2e       	mov	r11, r24
		}
		if((PINE&0x10) == 0x00) {
 290:	0c 99       	sbic	0x01, 4	; 1
 292:	03 c0       	rjmp	.+6      	; 0x29a <main+0xc4>
			sw5 = 1 - sw5;
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	8a 19       	sub	r24, r10
 298:	a8 2e       	mov	r10, r24
		}
		if((PINE&0x20) == 0x00) {
 29a:	0d 99       	sbic	0x01, 5	; 1
 29c:	03 c0       	rjmp	.+6      	; 0x2a4 <main+0xce>
			sw6 = 1 - sw6;
 29e:	81 e0       	ldi	r24, 0x01	; 1
 2a0:	89 19       	sub	r24, r9
 2a2:	98 2e       	mov	r9, r24
		}
		if((PINE&0x40) == 0x00) {
 2a4:	0e 9b       	sbis	0x01, 6	; 1
 2a6:	02 c0       	rjmp	.+4      	; 0x2ac <main+0xd6>
			PORTB=fnd[digit];
			_delay_ms(1000);
		}
		
		
		sw7=0;
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	01 c0       	rjmp	.+2      	; 0x2ae <main+0xd8>
		}
		if((PINE&0x20) == 0x00) {
			sw6 = 1 - sw6;
		}
		if((PINE&0x40) == 0x00) {
			sw7 = 1;
 2ac:	81 e0       	ldi	r24, 0x01	; 1
		}
		
		if(sw1 == 1){
 2ae:	01 30       	cpi	r16, 0x01	; 1
 2b0:	69 f4       	brne	.+26     	; 0x2cc <main+0xf6>
			leds[0] = 1;
 2b2:	21 e0       	ldi	r18, 0x01	; 1
 2b4:	30 e0       	ldi	r19, 0x00	; 0
 2b6:	3a 83       	std	Y+2, r19	; 0x02
 2b8:	29 83       	std	Y+1, r18	; 0x01
			PORTA=0x01;
 2ba:	91 e0       	ldi	r25, 0x01	; 1
 2bc:	9b bb       	out	0x1b, r25	; 27
 2be:	af e3       	ldi	r26, 0x3F	; 63
 2c0:	bf e1       	ldi	r27, 0x1F	; 31
 2c2:	11 97       	sbiw	r26, 0x01	; 1
 2c4:	f1 f7       	brne	.-4      	; 0x2c2 <main+0xec>
 2c6:	00 c0       	rjmp	.+0      	; 0x2c8 <main+0xf2>
 2c8:	00 00       	nop
 2ca:	0b c0       	rjmp	.+22     	; 0x2e2 <main+0x10c>
			_delay_ms(t);
		}
		else if(sw1 == 0) {
 2cc:	01 11       	cpse	r16, r1
 2ce:	09 c0       	rjmp	.+18     	; 0x2e2 <main+0x10c>
			leds[0] = 0;
 2d0:	1a 82       	std	Y+2, r1	; 0x02
 2d2:	19 82       	std	Y+1, r1	; 0x01
			PORTA = 0x00;
 2d4:	1b ba       	out	0x1b, r1	; 27
 2d6:	ef e3       	ldi	r30, 0x3F	; 63
 2d8:	ff e1       	ldi	r31, 0x1F	; 31
 2da:	31 97       	sbiw	r30, 0x01	; 1
 2dc:	f1 f7       	brne	.-4      	; 0x2da <main+0x104>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <main+0x10a>
 2e0:	00 00       	nop
			_delay_ms(t);
		}	
		
		if(sw2 == 1){
 2e2:	f1 e0       	ldi	r31, 0x01	; 1
 2e4:	df 12       	cpse	r13, r31
 2e6:	0d c0       	rjmp	.+26     	; 0x302 <main+0x12c>
			leds[1] = 1;
 2e8:	21 e0       	ldi	r18, 0x01	; 1
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	3c 83       	std	Y+4, r19	; 0x04
 2ee:	2b 83       	std	Y+3, r18	; 0x03
			PORTA=0x02;
 2f0:	92 e0       	ldi	r25, 0x02	; 2
 2f2:	9b bb       	out	0x1b, r25	; 27
 2f4:	af e3       	ldi	r26, 0x3F	; 63
 2f6:	bf e1       	ldi	r27, 0x1F	; 31
 2f8:	11 97       	sbiw	r26, 0x01	; 1
 2fa:	f1 f7       	brne	.-4      	; 0x2f8 <main+0x122>
 2fc:	00 c0       	rjmp	.+0      	; 0x2fe <main+0x128>
 2fe:	00 00       	nop
 300:	0b c0       	rjmp	.+22     	; 0x318 <main+0x142>
			_delay_ms(t);
		}
		else if(sw2 == 0) {
 302:	d1 10       	cpse	r13, r1
 304:	09 c0       	rjmp	.+18     	; 0x318 <main+0x142>
			leds[1] = 0;
 306:	1c 82       	std	Y+4, r1	; 0x04
 308:	1b 82       	std	Y+3, r1	; 0x03
			PORTA = 0x00;
 30a:	1b ba       	out	0x1b, r1	; 27
 30c:	ef e3       	ldi	r30, 0x3F	; 63
 30e:	ff e1       	ldi	r31, 0x1F	; 31
 310:	31 97       	sbiw	r30, 0x01	; 1
 312:	f1 f7       	brne	.-4      	; 0x310 <main+0x13a>
 314:	00 c0       	rjmp	.+0      	; 0x316 <main+0x140>
 316:	00 00       	nop
			_delay_ms(t);
		}
		
		if(sw3 == 1){
 318:	f1 e0       	ldi	r31, 0x01	; 1
 31a:	cf 12       	cpse	r12, r31
 31c:	0d c0       	rjmp	.+26     	; 0x338 <main+0x162>
			leds[2] = 1;
 31e:	21 e0       	ldi	r18, 0x01	; 1
 320:	30 e0       	ldi	r19, 0x00	; 0
 322:	3e 83       	std	Y+6, r19	; 0x06
 324:	2d 83       	std	Y+5, r18	; 0x05
			PORTA = 0x04;
 326:	94 e0       	ldi	r25, 0x04	; 4
 328:	9b bb       	out	0x1b, r25	; 27
 32a:	af e3       	ldi	r26, 0x3F	; 63
 32c:	bf e1       	ldi	r27, 0x1F	; 31
 32e:	11 97       	sbiw	r26, 0x01	; 1
 330:	f1 f7       	brne	.-4      	; 0x32e <main+0x158>
 332:	00 c0       	rjmp	.+0      	; 0x334 <main+0x15e>
 334:	00 00       	nop
 336:	0b c0       	rjmp	.+22     	; 0x34e <main+0x178>
			_delay_ms(t);
		}
		else if(sw3 == 0) {
 338:	c1 10       	cpse	r12, r1
 33a:	09 c0       	rjmp	.+18     	; 0x34e <main+0x178>
			leds[2] = 0;
 33c:	1e 82       	std	Y+6, r1	; 0x06
 33e:	1d 82       	std	Y+5, r1	; 0x05
			PORTA = 0x00;
 340:	1b ba       	out	0x1b, r1	; 27
 342:	ef e3       	ldi	r30, 0x3F	; 63
 344:	ff e1       	ldi	r31, 0x1F	; 31
 346:	31 97       	sbiw	r30, 0x01	; 1
 348:	f1 f7       	brne	.-4      	; 0x346 <main+0x170>
 34a:	00 c0       	rjmp	.+0      	; 0x34c <main+0x176>
 34c:	00 00       	nop
			_delay_ms(t);
		}
		if(sw4 == 1){
 34e:	f1 e0       	ldi	r31, 0x01	; 1
 350:	bf 12       	cpse	r11, r31
 352:	0d c0       	rjmp	.+26     	; 0x36e <main+0x198>
			leds[3] = 1;
 354:	21 e0       	ldi	r18, 0x01	; 1
 356:	30 e0       	ldi	r19, 0x00	; 0
 358:	38 87       	std	Y+8, r19	; 0x08
 35a:	2f 83       	std	Y+7, r18	; 0x07
			PORTA = 0x08;
 35c:	98 e0       	ldi	r25, 0x08	; 8
 35e:	9b bb       	out	0x1b, r25	; 27
 360:	af e3       	ldi	r26, 0x3F	; 63
 362:	bf e1       	ldi	r27, 0x1F	; 31
 364:	11 97       	sbiw	r26, 0x01	; 1
 366:	f1 f7       	brne	.-4      	; 0x364 <main+0x18e>
 368:	00 c0       	rjmp	.+0      	; 0x36a <main+0x194>
 36a:	00 00       	nop
 36c:	0b c0       	rjmp	.+22     	; 0x384 <main+0x1ae>
			_delay_ms(t);
		}
		else if(sw4 == 0) {
 36e:	b1 10       	cpse	r11, r1
 370:	09 c0       	rjmp	.+18     	; 0x384 <main+0x1ae>
			leds[3] = 0;
 372:	18 86       	std	Y+8, r1	; 0x08
 374:	1f 82       	std	Y+7, r1	; 0x07
			PORTA = 0x00;
 376:	1b ba       	out	0x1b, r1	; 27
 378:	ef e3       	ldi	r30, 0x3F	; 63
 37a:	ff e1       	ldi	r31, 0x1F	; 31
 37c:	31 97       	sbiw	r30, 0x01	; 1
 37e:	f1 f7       	brne	.-4      	; 0x37c <main+0x1a6>
 380:	00 c0       	rjmp	.+0      	; 0x382 <main+0x1ac>
 382:	00 00       	nop
			_delay_ms(t);
		}
		if(sw5 == 1){
 384:	f1 e0       	ldi	r31, 0x01	; 1
 386:	af 12       	cpse	r10, r31
 388:	0d c0       	rjmp	.+26     	; 0x3a4 <main+0x1ce>
			leds[4] = 1;
 38a:	21 e0       	ldi	r18, 0x01	; 1
 38c:	30 e0       	ldi	r19, 0x00	; 0
 38e:	3a 87       	std	Y+10, r19	; 0x0a
 390:	29 87       	std	Y+9, r18	; 0x09
			PORTA = 0x10;
 392:	90 e1       	ldi	r25, 0x10	; 16
 394:	9b bb       	out	0x1b, r25	; 27
 396:	af e3       	ldi	r26, 0x3F	; 63
 398:	bf e1       	ldi	r27, 0x1F	; 31
 39a:	11 97       	sbiw	r26, 0x01	; 1
 39c:	f1 f7       	brne	.-4      	; 0x39a <main+0x1c4>
 39e:	00 c0       	rjmp	.+0      	; 0x3a0 <main+0x1ca>
 3a0:	00 00       	nop
 3a2:	0b c0       	rjmp	.+22     	; 0x3ba <main+0x1e4>
			_delay_ms(t);
		}
		else if(sw5 == 0) {
 3a4:	a1 10       	cpse	r10, r1
 3a6:	09 c0       	rjmp	.+18     	; 0x3ba <main+0x1e4>
			leds[4] = 0;
 3a8:	1a 86       	std	Y+10, r1	; 0x0a
 3aa:	19 86       	std	Y+9, r1	; 0x09
			PORTA = 0x00;
 3ac:	1b ba       	out	0x1b, r1	; 27
 3ae:	ef e3       	ldi	r30, 0x3F	; 63
 3b0:	ff e1       	ldi	r31, 0x1F	; 31
 3b2:	31 97       	sbiw	r30, 0x01	; 1
 3b4:	f1 f7       	brne	.-4      	; 0x3b2 <main+0x1dc>
 3b6:	00 c0       	rjmp	.+0      	; 0x3b8 <main+0x1e2>
 3b8:	00 00       	nop
			_delay_ms(t);
		}
		if(sw6 == 1){
 3ba:	f1 e0       	ldi	r31, 0x01	; 1
 3bc:	9f 12       	cpse	r9, r31
 3be:	0d c0       	rjmp	.+26     	; 0x3da <main+0x204>
			leds[5] = 1;
 3c0:	21 e0       	ldi	r18, 0x01	; 1
 3c2:	30 e0       	ldi	r19, 0x00	; 0
 3c4:	3c 87       	std	Y+12, r19	; 0x0c
 3c6:	2b 87       	std	Y+11, r18	; 0x0b
			PORTA = 0x20;
 3c8:	90 e2       	ldi	r25, 0x20	; 32
 3ca:	9b bb       	out	0x1b, r25	; 27
 3cc:	af e3       	ldi	r26, 0x3F	; 63
 3ce:	bf e1       	ldi	r27, 0x1F	; 31
 3d0:	11 97       	sbiw	r26, 0x01	; 1
 3d2:	f1 f7       	brne	.-4      	; 0x3d0 <main+0x1fa>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <main+0x200>
 3d6:	00 00       	nop
 3d8:	0b c0       	rjmp	.+22     	; 0x3f0 <main+0x21a>
			_delay_ms(t);
		}
		else if(sw6 == 0) {
 3da:	91 10       	cpse	r9, r1
 3dc:	09 c0       	rjmp	.+18     	; 0x3f0 <main+0x21a>
			leds[5] = 0;
 3de:	1c 86       	std	Y+12, r1	; 0x0c
 3e0:	1b 86       	std	Y+11, r1	; 0x0b
			PORTA = 0x00;
 3e2:	1b ba       	out	0x1b, r1	; 27
 3e4:	ef e3       	ldi	r30, 0x3F	; 63
 3e6:	ff e1       	ldi	r31, 0x1F	; 31
 3e8:	31 97       	sbiw	r30, 0x01	; 1
 3ea:	f1 f7       	brne	.-4      	; 0x3e8 <main+0x212>
 3ec:	00 c0       	rjmp	.+0      	; 0x3ee <main+0x218>
 3ee:	00 00       	nop
			_delay_ms(t);
		}
		//led off switch
		if(sw7 == 1){
 3f0:	81 30       	cpi	r24, 0x01	; 1
 3f2:	31 f4       	brne	.+12     	; 0x400 <__LOCK_REGION_LENGTH__>
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
			sw4 = 0;
			sw5 = 0;
			sw6 = 0;
 3f4:	91 2c       	mov	r9, r1
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
			sw4 = 0;
			sw5 = 0;
 3f6:	a1 2c       	mov	r10, r1
		//led off switch
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
			sw4 = 0;
 3f8:	b1 2c       	mov	r11, r1
		}
		//led off switch
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
 3fa:	c1 2c       	mov	r12, r1
			_delay_ms(t);
		}
		//led off switch
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
 3fc:	d1 2c       	mov	r13, r1
			PORTA = 0x00;
			_delay_ms(t);
		}
		//led off switch
		if(sw7 == 1){
			sw1 = 0;
 3fe:	00 e0       	ldi	r16, 0x00	; 0
			PORTA = 0xFF; //A8
		} else{ //상태 led 끄기
			PORTA = 0xFF;
		}*/
		
		for(int i = 0; i < 8; i++){
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	1d c0       	rjmp	.+58     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
			if(leds[i] == 1) {
 406:	fc 01       	movw	r30, r24
 408:	ee 0f       	add	r30, r30
 40a:	ff 1f       	adc	r31, r31
 40c:	21 e0       	ldi	r18, 0x01	; 1
 40e:	30 e0       	ldi	r19, 0x00	; 0
 410:	2c 0f       	add	r18, r28
 412:	3d 1f       	adc	r19, r29
 414:	e2 0f       	add	r30, r18
 416:	f3 1f       	adc	r31, r19
 418:	20 81       	ld	r18, Z
 41a:	31 81       	ldd	r19, Z+1	; 0x01
 41c:	21 30       	cpi	r18, 0x01	; 1
 41e:	31 05       	cpc	r19, r1
 420:	71 f4       	brne	.+28     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
				PORTA = 0x40;
 422:	80 e4       	ldi	r24, 0x40	; 64
 424:	8b bb       	out	0x1b, r24	; 27
 426:	8f e3       	ldi	r24, 0x3F	; 63
 428:	9f e1       	ldi	r25, 0x1F	; 31
 42a:	01 97       	sbiw	r24, 0x01	; 1
 42c:	f1 f7       	brne	.-4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 42e:	00 c0       	rjmp	.+0      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 430:	00 00       	nop
			PORTA = 0xFF; //A8
		} else{ //상태 led 끄기
			PORTA = 0xFF;
		}*/
		
		for(int i = 0; i < 8; i++){
 432:	0f 2e       	mov	r0, r31
 434:	f5 e0       	ldi	r31, 0x05	; 5
 436:	ef 2e       	mov	r14, r31
 438:	f1 2c       	mov	r15, r1
 43a:	f0 2d       	mov	r31, r0
 43c:	21 c0       	rjmp	.+66     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 43e:	01 96       	adiw	r24, 0x01	; 1
 440:	88 30       	cpi	r24, 0x08	; 8
 442:	91 05       	cpc	r25, r1
 444:	04 f3       	brlt	.-64     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 446:	f5 cf       	rjmp	.-22     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
		}
		
		//lcd에 on/off 출력
		for(int l = 5; l >= 0; l--){
			
			MOVE(1,11-l);
 448:	6b e0       	ldi	r22, 0x0B	; 11
 44a:	70 e0       	ldi	r23, 0x00	; 0
 44c:	6e 19       	sub	r22, r14
 44e:	7f 09       	sbc	r23, r15
 450:	81 e0       	ldi	r24, 0x01	; 1
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	68 de       	rcall	.-816    	; 0x126 <MOVE>
			if(leds[l] == 1){
 456:	f7 01       	movw	r30, r14
 458:	ee 0f       	add	r30, r30
 45a:	ff 1f       	adc	r31, r31
 45c:	a1 e0       	ldi	r26, 0x01	; 1
 45e:	b0 e0       	ldi	r27, 0x00	; 0
 460:	ac 0f       	add	r26, r28
 462:	bd 1f       	adc	r27, r29
 464:	ea 0f       	add	r30, r26
 466:	fb 1f       	adc	r31, r27
 468:	80 81       	ld	r24, Z
 46a:	91 81       	ldd	r25, Z+1	; 0x01
 46c:	01 97       	sbiw	r24, 0x01	; 1
				DATA('O');
 46e:	19 f4       	brne	.+6      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 470:	8f e4       	ldi	r24, 0x4F	; 79
 472:	7a de       	rcall	.-780    	; 0x168 <DATA>
			}
			else{
				DATA('X');
 474:	02 c0       	rjmp	.+4      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 476:	88 e5       	ldi	r24, 0x58	; 88
 478:	77 de       	rcall	.-786    	; 0x168 <DATA>
				break;
			}
		}
		
		//lcd에 on/off 출력
		for(int l = 5; l >= 0; l--){
 47a:	b1 e0       	ldi	r27, 0x01	; 1
 47c:	eb 1a       	sub	r14, r27
 47e:	f1 08       	sbc	r15, r1
 480:	ff 20       	and	r15, r15
 482:	14 f7       	brge	.-60     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 484:	ef ef       	ldi	r30, 0xFF	; 255
 486:	f0 e7       	ldi	r31, 0x70	; 112
 488:	22 e0       	ldi	r18, 0x02	; 2
 48a:	e1 50       	subi	r30, 0x01	; 1
 48c:	f0 40       	sbci	r31, 0x00	; 0
 48e:	20 40       	sbci	r18, 0x00	; 0
 490:	e1 f7       	brne	.-8      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 492:	00 c0       	rjmp	.+0      	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
				DATA('X');
			}
			
		}
		_delay_ms(50);
		COMMAND(0b00000001);
 494:	00 00       	nop
 496:	81 e0       	ldi	r24, 0x01	; 1
 498:	0f de       	rcall	.-994    	; 0xb8 <COMMAND>
		
	}	
 49a:	cb ce       	rjmp	.-618    	; 0x232 <main+0x5c>

0000049c <_exit>:
 49c:	f8 94       	cli

0000049e <__stop_program>:
 49e:	ff cf       	rjmp	.-2      	; 0x49e <__stop_program>
