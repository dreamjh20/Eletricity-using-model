
Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000392  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000033e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000392  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003c4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000404  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ff8  00000000  00000000  0000044c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000008e8  00000000  00000000  00001444  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000656  00000000  00000000  00001d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  00002384  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000445  00000000  00000000  0000241c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000009b9  00000000  00000000  00002861  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  0000321a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	51 d0       	rcall	.+162    	; 0x13c <main>
  9a:	4f c1       	rjmp	.+670    	; 0x33a <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <COMMAND>:
	unsigned char i;
	for(i=0;i<n;i++)
	{
		DATA(font[i]);
	}
}
  9e:	ef e3       	ldi	r30, 0x3F	; 63
  a0:	ff e1       	ldi	r31, 0x1F	; 31
  a2:	31 97       	sbiw	r30, 0x01	; 1
  a4:	f1 f7       	brne	.-4      	; 0xa2 <COMMAND+0x4>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <COMMAND+0xa>
  a8:	00 00       	nop
  aa:	98 2f       	mov	r25, r24
  ac:	90 7f       	andi	r25, 0xF0	; 240
  ae:	95 bb       	out	0x15, r25	; 21
  b0:	95 b3       	in	r25, 0x15	; 21
  b2:	9e 7f       	andi	r25, 0xFE	; 254
  b4:	95 bb       	out	0x15, r25	; 21
  b6:	95 b3       	in	r25, 0x15	; 21
  b8:	9d 7f       	andi	r25, 0xFD	; 253
  ba:	95 bb       	out	0x15, r25	; 21
  bc:	f5 e0       	ldi	r31, 0x05	; 5
  be:	fa 95       	dec	r31
  c0:	f1 f7       	brne	.-4      	; 0xbe <COMMAND+0x20>
  c2:	00 00       	nop
  c4:	95 b3       	in	r25, 0x15	; 21
  c6:	94 60       	ori	r25, 0x04	; 4
  c8:	95 bb       	out	0x15, r25	; 21
  ca:	25 e0       	ldi	r18, 0x05	; 5
  cc:	2a 95       	dec	r18
  ce:	f1 f7       	brne	.-4      	; 0xcc <COMMAND+0x2e>
  d0:	00 00       	nop
  d2:	95 b3       	in	r25, 0x15	; 21
  d4:	9b 7f       	andi	r25, 0xFB	; 251
  d6:	95 bb       	out	0x15, r25	; 21
  d8:	e0 e1       	ldi	r30, 0x10	; 16
  da:	8e 9f       	mul	r24, r30
  dc:	c0 01       	movw	r24, r0
  de:	11 24       	eor	r1, r1
  e0:	85 bb       	out	0x15, r24	; 21
  e2:	85 b3       	in	r24, 0x15	; 21
  e4:	8e 7f       	andi	r24, 0xFE	; 254
  e6:	85 bb       	out	0x15, r24	; 21
  e8:	85 b3       	in	r24, 0x15	; 21
  ea:	8d 7f       	andi	r24, 0xFD	; 253
  ec:	85 bb       	out	0x15, r24	; 21
  ee:	f5 e0       	ldi	r31, 0x05	; 5
  f0:	fa 95       	dec	r31
  f2:	f1 f7       	brne	.-4      	; 0xf0 <COMMAND+0x52>
  f4:	00 00       	nop
  f6:	85 b3       	in	r24, 0x15	; 21
  f8:	84 60       	ori	r24, 0x04	; 4
  fa:	85 bb       	out	0x15, r24	; 21
  fc:	25 e0       	ldi	r18, 0x05	; 5
  fe:	2a 95       	dec	r18
 100:	f1 f7       	brne	.-4      	; 0xfe <COMMAND+0x60>
 102:	00 00       	nop
 104:	85 b3       	in	r24, 0x15	; 21
 106:	8b 7f       	andi	r24, 0xFB	; 251
 108:	85 bb       	out	0x15, r24	; 21
 10a:	08 95       	ret

0000010c <LCD_INIT>:
 10c:	2f ef       	ldi	r18, 0xFF	; 255
 10e:	86 e7       	ldi	r24, 0x76	; 118
 110:	91 e0       	ldi	r25, 0x01	; 1
 112:	21 50       	subi	r18, 0x01	; 1
 114:	80 40       	sbci	r24, 0x00	; 0
 116:	90 40       	sbci	r25, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <LCD_INIT+0x6>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <LCD_INIT+0x10>
 11c:	00 00       	nop
 11e:	88 e2       	ldi	r24, 0x28	; 40
 120:	be df       	rcall	.-132    	; 0x9e <COMMAND>
 122:	8c e0       	ldi	r24, 0x0C	; 12
 124:	bc df       	rcall	.-136    	; 0x9e <COMMAND>
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	ba df       	rcall	.-140    	; 0x9e <COMMAND>
 12a:	87 ee       	ldi	r24, 0xE7	; 231
 12c:	97 e1       	ldi	r25, 0x17	; 23
 12e:	01 97       	sbiw	r24, 0x01	; 1
 130:	f1 f7       	brne	.-4      	; 0x12e <LCD_INIT+0x22>
 132:	00 c0       	rjmp	.+0      	; 0x134 <LCD_INIT+0x28>
 134:	00 00       	nop
 136:	86 e0       	ldi	r24, 0x06	; 6
 138:	b2 cf       	rjmp	.-156    	; 0x9e <COMMAND>
 13a:	08 95       	ret

0000013c <main>:
	PORTC &= 0b11111011;		// E = 0
}


int main(void)
{
 13c:	cf 93       	push	r28
 13e:	df 93       	push	r29
 140:	cd b7       	in	r28, 0x3d	; 61
 142:	de b7       	in	r29, 0x3e	; 62
 144:	2e 97       	sbiw	r28, 0x0e	; 14
 146:	0f b6       	in	r0, 0x3f	; 63
 148:	f8 94       	cli
 14a:	de bf       	out	0x3e, r29	; 62
 14c:	0f be       	out	0x3f, r0	; 63
 14e:	cd bf       	out	0x3d, r28	; 61
	unsigned char sw3=0;
	unsigned char sw4=0;
	unsigned char sw5=0;
	unsigned char sw6=0;
	unsigned char sw7=0;
	int leds[7] = {0, 0, 0, 0, 0, 0, 0};
 150:	fe 01       	movw	r30, r28
 152:	31 96       	adiw	r30, 0x01	; 1
 154:	8e e0       	ldi	r24, 0x0E	; 14
 156:	df 01       	movw	r26, r30
 158:	1d 92       	st	X+, r1
 15a:	8a 95       	dec	r24
 15c:	e9 f7       	brne	.-6      	; 0x158 <main+0x1c>
	unsigned int t = 5;
	DDRC = 0xff; //lcd
 15e:	8f ef       	ldi	r24, 0xFF	; 255
 160:	84 bb       	out	0x14, r24	; 20
	DDRE = 0xFF; //led
 162:	82 b9       	out	0x02, r24	; 2
	DDRA = 0xFF;
 164:	8a bb       	out	0x1a, r24	; 26
	PORTA = 0x00;
 166:	1b ba       	out	0x1b, r1	; 27
	PORTC = 0x00; //lcd
 168:	15 ba       	out	0x15, r1	; 21
	DDRE = 0x00; //스위치
 16a:	12 b8       	out	0x02, r1	; 2
	
	LCD_INIT(); //lcd초기
 16c:	cf df       	rcall	.-98     	; 0x10c <LCD_INIT>
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
	unsigned char sw4=0;
	unsigned char sw5=0;
	unsigned char sw6=0;
 16e:	b0 e0       	ldi	r27, 0x00	; 0
{
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
	unsigned char sw4=0;
	unsigned char sw5=0;
 170:	a0 e0       	ldi	r26, 0x00	; 0
int main(void)
{
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
	unsigned char sw4=0;
 172:	70 e0       	ldi	r23, 0x00	; 0

int main(void)
{
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
 174:	60 e0       	ldi	r22, 0x00	; 0


int main(void)
{
	unsigned char sw1=0;
	unsigned char sw2=0;
 176:	50 e0       	ldi	r21, 0x00	; 0
}


int main(void)
{
	unsigned char sw1=0;
 178:	40 e0       	ldi	r20, 0x00	; 0
	LCD_INIT(); //lcd초기
	while(1)
	{
		sw7=0;
		//스위치
		if((PINE&0x01) == 0x00) {
 17a:	08 99       	sbic	0x01, 0	; 1
 17c:	03 c0       	rjmp	.+6      	; 0x184 <main+0x48>
			sw1 = 1 - sw1;
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	84 1b       	sub	r24, r20
 182:	48 2f       	mov	r20, r24
		}
		if((PINE&0x02) == 0x00) {
 184:	09 99       	sbic	0x01, 1	; 1
 186:	03 c0       	rjmp	.+6      	; 0x18e <main+0x52>
			sw2 = 1 - sw2;
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	85 1b       	sub	r24, r21
 18c:	58 2f       	mov	r21, r24
		}
		if((PINE&0x04) == 0x00) {
 18e:	0a 99       	sbic	0x01, 2	; 1
 190:	03 c0       	rjmp	.+6      	; 0x198 <main+0x5c>
			sw3 = 1 - sw3;
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	86 1b       	sub	r24, r22
 196:	68 2f       	mov	r22, r24
		}
		if((PINE&0x08) == 0x00) {
 198:	0b 99       	sbic	0x01, 3	; 1
 19a:	03 c0       	rjmp	.+6      	; 0x1a2 <main+0x66>
			sw4 = 1 - sw4;
 19c:	81 e0       	ldi	r24, 0x01	; 1
 19e:	87 1b       	sub	r24, r23
 1a0:	78 2f       	mov	r23, r24
		}
		if((PINE&0x10) == 0x00) {
 1a2:	0c 99       	sbic	0x01, 4	; 1
 1a4:	03 c0       	rjmp	.+6      	; 0x1ac <main+0x70>
			sw5 = 1 - sw5;
 1a6:	81 e0       	ldi	r24, 0x01	; 1
 1a8:	8a 1b       	sub	r24, r26
 1aa:	a8 2f       	mov	r26, r24
		}
		if((PINE&0x20) == 0x00) {
 1ac:	0d 99       	sbic	0x01, 5	; 1
 1ae:	03 c0       	rjmp	.+6      	; 0x1b6 <main+0x7a>
			sw6 = 1 - sw6;
 1b0:	81 e0       	ldi	r24, 0x01	; 1
 1b2:	8b 1b       	sub	r24, r27
 1b4:	b8 2f       	mov	r27, r24
		}
		if((PINE&0x40) == 0x00) {
 1b6:	0e 9b       	sbis	0x01, 6	; 1
 1b8:	02 c0       	rjmp	.+4      	; 0x1be <main+0x82>
	DDRE = 0x00; //스위치
	
	LCD_INIT(); //lcd초기
	while(1)
	{
		sw7=0;
 1ba:	80 e0       	ldi	r24, 0x00	; 0
 1bc:	01 c0       	rjmp	.+2      	; 0x1c0 <main+0x84>
		}
		if((PINE&0x20) == 0x00) {
			sw6 = 1 - sw6;
		}
		if((PINE&0x40) == 0x00) {
			sw7 = 1;
 1be:	81 e0       	ldi	r24, 0x01	; 1
		}
		
		if(sw1 == 1){
 1c0:	41 30       	cpi	r20, 0x01	; 1
 1c2:	69 f4       	brne	.+26     	; 0x1de <main+0xa2>
			leds[0] = 1;
 1c4:	21 e0       	ldi	r18, 0x01	; 1
 1c6:	30 e0       	ldi	r19, 0x00	; 0
 1c8:	3a 83       	std	Y+2, r19	; 0x02
 1ca:	29 83       	std	Y+1, r18	; 0x01
			PORTA=0x01;
 1cc:	91 e0       	ldi	r25, 0x01	; 1
 1ce:	9b bb       	out	0x1b, r25	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d0:	ef e1       	ldi	r30, 0x1F	; 31
 1d2:	fe e4       	ldi	r31, 0x4E	; 78
 1d4:	31 97       	sbiw	r30, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <main+0x98>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <main+0x9e>
 1da:	00 00       	nop
 1dc:	0b c0       	rjmp	.+22     	; 0x1f4 <main+0xb8>
			_delay_ms(t);
		}
		else if(sw1 == 0) {
 1de:	41 11       	cpse	r20, r1
 1e0:	09 c0       	rjmp	.+18     	; 0x1f4 <main+0xb8>
			leds[0] = 0;
 1e2:	1a 82       	std	Y+2, r1	; 0x02
 1e4:	19 82       	std	Y+1, r1	; 0x01
			PORTA = 0x00;
 1e6:	1b ba       	out	0x1b, r1	; 27
 1e8:	ef e1       	ldi	r30, 0x1F	; 31
 1ea:	fe e4       	ldi	r31, 0x4E	; 78
 1ec:	31 97       	sbiw	r30, 0x01	; 1
 1ee:	f1 f7       	brne	.-4      	; 0x1ec <main+0xb0>
 1f0:	00 c0       	rjmp	.+0      	; 0x1f2 <main+0xb6>
 1f2:	00 00       	nop
			_delay_ms(t);
		}	
		
		if(sw2 == 1){
 1f4:	51 30       	cpi	r21, 0x01	; 1
 1f6:	69 f4       	brne	.+26     	; 0x212 <main+0xd6>
			leds[1] = 1;
 1f8:	21 e0       	ldi	r18, 0x01	; 1
 1fa:	30 e0       	ldi	r19, 0x00	; 0
 1fc:	3c 83       	std	Y+4, r19	; 0x04
 1fe:	2b 83       	std	Y+3, r18	; 0x03
			PORTA=0x02;
 200:	92 e0       	ldi	r25, 0x02	; 2
 202:	9b bb       	out	0x1b, r25	; 27
 204:	ef e1       	ldi	r30, 0x1F	; 31
 206:	fe e4       	ldi	r31, 0x4E	; 78
 208:	31 97       	sbiw	r30, 0x01	; 1
 20a:	f1 f7       	brne	.-4      	; 0x208 <main+0xcc>
 20c:	00 c0       	rjmp	.+0      	; 0x20e <main+0xd2>
 20e:	00 00       	nop
 210:	0b c0       	rjmp	.+22     	; 0x228 <main+0xec>
			_delay_ms(t);
		}
		else if(sw2 == 0) {
 212:	51 11       	cpse	r21, r1
 214:	09 c0       	rjmp	.+18     	; 0x228 <main+0xec>
			leds[1] = 0;
 216:	1c 82       	std	Y+4, r1	; 0x04
 218:	1b 82       	std	Y+3, r1	; 0x03
			PORTA = 0x00;
 21a:	1b ba       	out	0x1b, r1	; 27
 21c:	ef e1       	ldi	r30, 0x1F	; 31
 21e:	fe e4       	ldi	r31, 0x4E	; 78
 220:	31 97       	sbiw	r30, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <main+0xe4>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0xea>
 226:	00 00       	nop
			_delay_ms(t);
		}
		
		if(sw3 == 1){
 228:	61 30       	cpi	r22, 0x01	; 1
 22a:	69 f4       	brne	.+26     	; 0x246 <main+0x10a>
			leds[2] = 1;
 22c:	21 e0       	ldi	r18, 0x01	; 1
 22e:	30 e0       	ldi	r19, 0x00	; 0
 230:	3e 83       	std	Y+6, r19	; 0x06
 232:	2d 83       	std	Y+5, r18	; 0x05
			PORTA = 0x04;
 234:	94 e0       	ldi	r25, 0x04	; 4
 236:	9b bb       	out	0x1b, r25	; 27
 238:	ef e1       	ldi	r30, 0x1F	; 31
 23a:	fe e4       	ldi	r31, 0x4E	; 78
 23c:	31 97       	sbiw	r30, 0x01	; 1
 23e:	f1 f7       	brne	.-4      	; 0x23c <main+0x100>
 240:	00 c0       	rjmp	.+0      	; 0x242 <main+0x106>
 242:	00 00       	nop
 244:	0b c0       	rjmp	.+22     	; 0x25c <main+0x120>
			_delay_ms(t);
		}
		else if(sw3 == 0) {
 246:	61 11       	cpse	r22, r1
 248:	09 c0       	rjmp	.+18     	; 0x25c <main+0x120>
			leds[2] = 0;
 24a:	1e 82       	std	Y+6, r1	; 0x06
 24c:	1d 82       	std	Y+5, r1	; 0x05
			PORTA = 0x00;
 24e:	1b ba       	out	0x1b, r1	; 27
 250:	ef e1       	ldi	r30, 0x1F	; 31
 252:	fe e4       	ldi	r31, 0x4E	; 78
 254:	31 97       	sbiw	r30, 0x01	; 1
 256:	f1 f7       	brne	.-4      	; 0x254 <main+0x118>
 258:	00 c0       	rjmp	.+0      	; 0x25a <main+0x11e>
 25a:	00 00       	nop
			_delay_ms(t);
		}
		if(sw4 == 1){
 25c:	71 30       	cpi	r23, 0x01	; 1
 25e:	69 f4       	brne	.+26     	; 0x27a <main+0x13e>
			leds[3] = 1;
 260:	21 e0       	ldi	r18, 0x01	; 1
 262:	30 e0       	ldi	r19, 0x00	; 0
 264:	38 87       	std	Y+8, r19	; 0x08
 266:	2f 83       	std	Y+7, r18	; 0x07
			PORTA = 0x08;
 268:	98 e0       	ldi	r25, 0x08	; 8
 26a:	9b bb       	out	0x1b, r25	; 27
 26c:	ef e1       	ldi	r30, 0x1F	; 31
 26e:	fe e4       	ldi	r31, 0x4E	; 78
 270:	31 97       	sbiw	r30, 0x01	; 1
 272:	f1 f7       	brne	.-4      	; 0x270 <main+0x134>
 274:	00 c0       	rjmp	.+0      	; 0x276 <main+0x13a>
 276:	00 00       	nop
 278:	0b c0       	rjmp	.+22     	; 0x290 <main+0x154>
			_delay_ms(t);
		}
		else if(sw4 == 0) {
 27a:	71 11       	cpse	r23, r1
 27c:	09 c0       	rjmp	.+18     	; 0x290 <main+0x154>
			leds[3] = 0;
 27e:	18 86       	std	Y+8, r1	; 0x08
 280:	1f 82       	std	Y+7, r1	; 0x07
			PORTA = 0x00;
 282:	1b ba       	out	0x1b, r1	; 27
 284:	ef e1       	ldi	r30, 0x1F	; 31
 286:	fe e4       	ldi	r31, 0x4E	; 78
 288:	31 97       	sbiw	r30, 0x01	; 1
 28a:	f1 f7       	brne	.-4      	; 0x288 <main+0x14c>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <main+0x152>
 28e:	00 00       	nop
			_delay_ms(t);
		}
		if(sw5 == 1){
 290:	a1 30       	cpi	r26, 0x01	; 1
 292:	69 f4       	brne	.+26     	; 0x2ae <main+0x172>
			leds[4] = 1;
 294:	21 e0       	ldi	r18, 0x01	; 1
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	3a 87       	std	Y+10, r19	; 0x0a
 29a:	29 87       	std	Y+9, r18	; 0x09
			PORTA = 0x10;
 29c:	90 e1       	ldi	r25, 0x10	; 16
 29e:	9b bb       	out	0x1b, r25	; 27
 2a0:	ef e1       	ldi	r30, 0x1F	; 31
 2a2:	fe e4       	ldi	r31, 0x4E	; 78
 2a4:	31 97       	sbiw	r30, 0x01	; 1
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <main+0x168>
 2a8:	00 c0       	rjmp	.+0      	; 0x2aa <main+0x16e>
 2aa:	00 00       	nop
 2ac:	0b c0       	rjmp	.+22     	; 0x2c4 <main+0x188>
			_delay_ms(t);
		}
		else if(sw5 == 0) {
 2ae:	a1 11       	cpse	r26, r1
 2b0:	09 c0       	rjmp	.+18     	; 0x2c4 <main+0x188>
			leds[4] = 0;
 2b2:	1a 86       	std	Y+10, r1	; 0x0a
 2b4:	19 86       	std	Y+9, r1	; 0x09
			PORTA = 0x00;
 2b6:	1b ba       	out	0x1b, r1	; 27
 2b8:	ef e1       	ldi	r30, 0x1F	; 31
 2ba:	fe e4       	ldi	r31, 0x4E	; 78
 2bc:	31 97       	sbiw	r30, 0x01	; 1
 2be:	f1 f7       	brne	.-4      	; 0x2bc <main+0x180>
 2c0:	00 c0       	rjmp	.+0      	; 0x2c2 <main+0x186>
 2c2:	00 00       	nop
			_delay_ms(t);
		}
		if(sw6 == 1){
 2c4:	b1 30       	cpi	r27, 0x01	; 1
 2c6:	69 f4       	brne	.+26     	; 0x2e2 <main+0x1a6>
			leds[5] = 1;
 2c8:	21 e0       	ldi	r18, 0x01	; 1
 2ca:	30 e0       	ldi	r19, 0x00	; 0
 2cc:	3c 87       	std	Y+12, r19	; 0x0c
 2ce:	2b 87       	std	Y+11, r18	; 0x0b
			PORTA = 0x20;
 2d0:	90 e2       	ldi	r25, 0x20	; 32
 2d2:	9b bb       	out	0x1b, r25	; 27
 2d4:	ef e1       	ldi	r30, 0x1F	; 31
 2d6:	fe e4       	ldi	r31, 0x4E	; 78
 2d8:	31 97       	sbiw	r30, 0x01	; 1
 2da:	f1 f7       	brne	.-4      	; 0x2d8 <main+0x19c>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <main+0x1a2>
 2de:	00 00       	nop
 2e0:	0b c0       	rjmp	.+22     	; 0x2f8 <main+0x1bc>
			_delay_ms(t);
		}
		else if(sw6 == 0) {
 2e2:	b1 11       	cpse	r27, r1
 2e4:	09 c0       	rjmp	.+18     	; 0x2f8 <main+0x1bc>
			leds[5] = 0;
 2e6:	1c 86       	std	Y+12, r1	; 0x0c
 2e8:	1b 86       	std	Y+11, r1	; 0x0b
			PORTA = 0x00;
 2ea:	1b ba       	out	0x1b, r1	; 27
 2ec:	ef e1       	ldi	r30, 0x1F	; 31
 2ee:	fe e4       	ldi	r31, 0x4E	; 78
 2f0:	31 97       	sbiw	r30, 0x01	; 1
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <main+0x1b4>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <main+0x1ba>
 2f6:	00 00       	nop
			_delay_ms(t);
		}
		if(sw7 == 1){
 2f8:	81 30       	cpi	r24, 0x01	; 1
 2fa:	31 f4       	brne	.+12     	; 0x308 <main+0x1cc>
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
			sw4 = 0;
			sw5 = 0;
			sw6 = 0;
 2fc:	b0 e0       	ldi	r27, 0x00	; 0
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
			sw4 = 0;
			sw5 = 0;
 2fe:	a0 e0       	ldi	r26, 0x00	; 0
		}
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
			sw4 = 0;
 300:	70 e0       	ldi	r23, 0x00	; 0
			_delay_ms(t);
		}
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
 302:	60 e0       	ldi	r22, 0x00	; 0
			PORTA = 0x00;
			_delay_ms(t);
		}
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
 304:	50 e0       	ldi	r21, 0x00	; 0
			leds[5] = 0;
			PORTA = 0x00;
			_delay_ms(t);
		}
		if(sw7 == 1){
			sw1 = 0;
 306:	40 e0       	ldi	r20, 0x00	; 0
		/*if(check(leds) == 1){ //상태 led 켜기
			PORTA = 0xFF; //A8
		} else{ //상태 led 끄기
			PORTA = 0xFF;
		}*/
		for(int i = 0; i < 8; i++){
 308:	80 e0       	ldi	r24, 0x00	; 0
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	12 c0       	rjmp	.+36     	; 0x332 <main+0x1f6>
			if(leds[i] == 1) {
 30e:	fc 01       	movw	r30, r24
 310:	ee 0f       	add	r30, r30
 312:	ff 1f       	adc	r31, r31
 314:	21 e0       	ldi	r18, 0x01	; 1
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	2c 0f       	add	r18, r28
 31a:	3d 1f       	adc	r19, r29
 31c:	e2 0f       	add	r30, r18
 31e:	f3 1f       	adc	r31, r19
 320:	20 81       	ld	r18, Z
 322:	31 81       	ldd	r19, Z+1	; 0x01
 324:	21 30       	cpi	r18, 0x01	; 1
 326:	31 05       	cpc	r19, r1
 328:	19 f4       	brne	.+6      	; 0x330 <main+0x1f4>
				PORTA = 0xFF;
 32a:	8f ef       	ldi	r24, 0xFF	; 255
 32c:	8b bb       	out	0x1b, r24	; 27
				break;
 32e:	25 cf       	rjmp	.-438    	; 0x17a <main+0x3e>
		/*if(check(leds) == 1){ //상태 led 켜기
			PORTA = 0xFF; //A8
		} else{ //상태 led 끄기
			PORTA = 0xFF;
		}*/
		for(int i = 0; i < 8; i++){
 330:	01 96       	adiw	r24, 0x01	; 1
 332:	88 30       	cpi	r24, 0x08	; 8
 334:	91 05       	cpc	r25, r1
 336:	5c f3       	brlt	.-42     	; 0x30e <main+0x1d2>
 338:	20 cf       	rjmp	.-448    	; 0x17a <main+0x3e>

0000033a <_exit>:
 33a:	f8 94       	cli

0000033c <__stop_program>:
 33c:	ff cf       	rjmp	.-2      	; 0x33c <__stop_program>
