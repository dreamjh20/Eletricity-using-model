
Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000006c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000672  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000006c6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000006f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000048  00000000  00000000  00000738  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001286  00000000  00000000  00000780  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000092b  00000000  00000000  00001a06  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000072f  00000000  00000000  00002331  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  00002a60  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000465  00000000  00000000  00002af8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000a5d  00000000  00000000  00002f5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  000039ba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	91 d0       	rcall	.+290    	; 0x1bc <main>
  9a:	e9 c2       	rjmp	.+1490   	; 0x66e <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <COMMAND>:
	unsigned char i;
	for(i=0;i<n;i++)
	{
		DATA(font[i]);
	}
}
  9e:	ef e3       	ldi	r30, 0x3F	; 63
  a0:	ff e1       	ldi	r31, 0x1F	; 31
  a2:	31 97       	sbiw	r30, 0x01	; 1
  a4:	f1 f7       	brne	.-4      	; 0xa2 <COMMAND+0x4>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <COMMAND+0xa>
  a8:	00 00       	nop
  aa:	98 2f       	mov	r25, r24
  ac:	90 7f       	andi	r25, 0xF0	; 240
  ae:	95 bb       	out	0x15, r25	; 21
  b0:	95 b3       	in	r25, 0x15	; 21
  b2:	9e 7f       	andi	r25, 0xFE	; 254
  b4:	95 bb       	out	0x15, r25	; 21
  b6:	95 b3       	in	r25, 0x15	; 21
  b8:	9d 7f       	andi	r25, 0xFD	; 253
  ba:	95 bb       	out	0x15, r25	; 21
  bc:	f5 e0       	ldi	r31, 0x05	; 5
  be:	fa 95       	dec	r31
  c0:	f1 f7       	brne	.-4      	; 0xbe <COMMAND+0x20>
  c2:	00 00       	nop
  c4:	95 b3       	in	r25, 0x15	; 21
  c6:	94 60       	ori	r25, 0x04	; 4
  c8:	95 bb       	out	0x15, r25	; 21
  ca:	25 e0       	ldi	r18, 0x05	; 5
  cc:	2a 95       	dec	r18
  ce:	f1 f7       	brne	.-4      	; 0xcc <COMMAND+0x2e>
  d0:	00 00       	nop
  d2:	95 b3       	in	r25, 0x15	; 21
  d4:	9b 7f       	andi	r25, 0xFB	; 251
  d6:	95 bb       	out	0x15, r25	; 21
  d8:	e0 e1       	ldi	r30, 0x10	; 16
  da:	8e 9f       	mul	r24, r30
  dc:	c0 01       	movw	r24, r0
  de:	11 24       	eor	r1, r1
  e0:	85 bb       	out	0x15, r24	; 21
  e2:	85 b3       	in	r24, 0x15	; 21
  e4:	8e 7f       	andi	r24, 0xFE	; 254
  e6:	85 bb       	out	0x15, r24	; 21
  e8:	85 b3       	in	r24, 0x15	; 21
  ea:	8d 7f       	andi	r24, 0xFD	; 253
  ec:	85 bb       	out	0x15, r24	; 21
  ee:	f5 e0       	ldi	r31, 0x05	; 5
  f0:	fa 95       	dec	r31
  f2:	f1 f7       	brne	.-4      	; 0xf0 <COMMAND+0x52>
  f4:	00 00       	nop
  f6:	85 b3       	in	r24, 0x15	; 21
  f8:	84 60       	ori	r24, 0x04	; 4
  fa:	85 bb       	out	0x15, r24	; 21
  fc:	25 e0       	ldi	r18, 0x05	; 5
  fe:	2a 95       	dec	r18
 100:	f1 f7       	brne	.-4      	; 0xfe <COMMAND+0x60>
 102:	00 00       	nop
 104:	85 b3       	in	r24, 0x15	; 21
 106:	8b 7f       	andi	r24, 0xFB	; 251
 108:	85 bb       	out	0x15, r24	; 21
 10a:	08 95       	ret

0000010c <MOVE>:
 10c:	01 97       	sbiw	r24, 0x01	; 1
 10e:	19 f4       	brne	.+6      	; 0x116 <MOVE+0xa>
 110:	8f e7       	ldi	r24, 0x7F	; 127
 112:	86 0f       	add	r24, r22
 114:	02 c0       	rjmp	.+4      	; 0x11a <MOVE+0xe>
 116:	8f eb       	ldi	r24, 0xBF	; 191
 118:	86 0f       	add	r24, r22
 11a:	c1 cf       	rjmp	.-126    	; 0x9e <COMMAND>
 11c:	08 95       	ret

0000011e <LCD_INIT>:
 11e:	2f ef       	ldi	r18, 0xFF	; 255
 120:	86 e7       	ldi	r24, 0x76	; 118
 122:	91 e0       	ldi	r25, 0x01	; 1
 124:	21 50       	subi	r18, 0x01	; 1
 126:	80 40       	sbci	r24, 0x00	; 0
 128:	90 40       	sbci	r25, 0x00	; 0
 12a:	e1 f7       	brne	.-8      	; 0x124 <LCD_INIT+0x6>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <LCD_INIT+0x10>
 12e:	00 00       	nop
 130:	88 e2       	ldi	r24, 0x28	; 40
 132:	b5 df       	rcall	.-150    	; 0x9e <COMMAND>
 134:	8c e0       	ldi	r24, 0x0C	; 12
 136:	b3 df       	rcall	.-154    	; 0x9e <COMMAND>
 138:	81 e0       	ldi	r24, 0x01	; 1
 13a:	b1 df       	rcall	.-158    	; 0x9e <COMMAND>
 13c:	87 ee       	ldi	r24, 0xE7	; 231
 13e:	97 e1       	ldi	r25, 0x17	; 23
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <LCD_INIT+0x22>
 144:	00 c0       	rjmp	.+0      	; 0x146 <LCD_INIT+0x28>
 146:	00 00       	nop
 148:	86 e0       	ldi	r24, 0x06	; 6
 14a:	a9 cf       	rjmp	.-174    	; 0x9e <COMMAND>
 14c:	08 95       	ret

0000014e <DATA>:
 14e:	ef e3       	ldi	r30, 0x3F	; 63
 150:	ff e1       	ldi	r31, 0x1F	; 31
 152:	31 97       	sbiw	r30, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <DATA+0x4>
 156:	00 c0       	rjmp	.+0      	; 0x158 <DATA+0xa>
 158:	00 00       	nop
 15a:	98 2f       	mov	r25, r24
 15c:	90 7f       	andi	r25, 0xF0	; 240
 15e:	95 bb       	out	0x15, r25	; 21
 160:	95 b3       	in	r25, 0x15	; 21
 162:	91 60       	ori	r25, 0x01	; 1
 164:	95 bb       	out	0x15, r25	; 21
 166:	95 b3       	in	r25, 0x15	; 21
 168:	9d 7f       	andi	r25, 0xFD	; 253
 16a:	95 bb       	out	0x15, r25	; 21
 16c:	f5 e0       	ldi	r31, 0x05	; 5
 16e:	fa 95       	dec	r31
 170:	f1 f7       	brne	.-4      	; 0x16e <DATA+0x20>
 172:	00 00       	nop
 174:	95 b3       	in	r25, 0x15	; 21
 176:	94 60       	ori	r25, 0x04	; 4
 178:	95 bb       	out	0x15, r25	; 21
 17a:	25 e0       	ldi	r18, 0x05	; 5
 17c:	2a 95       	dec	r18
 17e:	f1 f7       	brne	.-4      	; 0x17c <DATA+0x2e>
 180:	00 00       	nop
 182:	95 b3       	in	r25, 0x15	; 21
 184:	9b 7f       	andi	r25, 0xFB	; 251
 186:	95 bb       	out	0x15, r25	; 21
 188:	e0 e1       	ldi	r30, 0x10	; 16
 18a:	8e 9f       	mul	r24, r30
 18c:	c0 01       	movw	r24, r0
 18e:	11 24       	eor	r1, r1
 190:	85 bb       	out	0x15, r24	; 21
 192:	85 b3       	in	r24, 0x15	; 21
 194:	81 60       	ori	r24, 0x01	; 1
 196:	85 bb       	out	0x15, r24	; 21
 198:	85 b3       	in	r24, 0x15	; 21
 19a:	8d 7f       	andi	r24, 0xFD	; 253
 19c:	85 bb       	out	0x15, r24	; 21
 19e:	f5 e0       	ldi	r31, 0x05	; 5
 1a0:	fa 95       	dec	r31
 1a2:	f1 f7       	brne	.-4      	; 0x1a0 <DATA+0x52>
 1a4:	00 00       	nop
 1a6:	85 b3       	in	r24, 0x15	; 21
 1a8:	84 60       	ori	r24, 0x04	; 4
 1aa:	85 bb       	out	0x15, r24	; 21
 1ac:	25 e0       	ldi	r18, 0x05	; 5
 1ae:	2a 95       	dec	r18
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <DATA+0x60>
 1b2:	00 00       	nop
 1b4:	85 b3       	in	r24, 0x15	; 21
 1b6:	8b 7f       	andi	r24, 0xFB	; 251
 1b8:	85 bb       	out	0x15, r24	; 21
 1ba:	08 95       	ret

000001bc <main>:
	PORTC &= 0b11111011;		// E = 0
}


int main(void)
{
 1bc:	cf 93       	push	r28
 1be:	df 93       	push	r29
 1c0:	cd b7       	in	r28, 0x3d	; 61
 1c2:	de b7       	in	r29, 0x3e	; 62
 1c4:	2e 97       	sbiw	r28, 0x0e	; 14
 1c6:	0f b6       	in	r0, 0x3f	; 63
 1c8:	f8 94       	cli
 1ca:	de bf       	out	0x3e, r29	; 62
 1cc:	0f be       	out	0x3f, r0	; 63
 1ce:	cd bf       	out	0x3d, r28	; 61
	unsigned char sw3=0;
	unsigned char sw4=0;
	unsigned char sw5=0;
	unsigned char sw6=0;
	unsigned char sw7=0;
	int leds[7] = {0, 0, 0, 0, 0, 0, 0};
 1d0:	fe 01       	movw	r30, r28
 1d2:	31 96       	adiw	r30, 0x01	; 1
 1d4:	8e e0       	ldi	r24, 0x0E	; 14
 1d6:	df 01       	movw	r26, r30
 1d8:	1d 92       	st	X+, r1
 1da:	8a 95       	dec	r24
 1dc:	e9 f7       	brne	.-6      	; 0x1d8 <main+0x1c>
	unsigned int t = 2;
	float countL = 0;
	DDRC = 0xff; //lcd
 1de:	8f ef       	ldi	r24, 0xFF	; 255
 1e0:	84 bb       	out	0x14, r24	; 20
	DDRE = 0xFF; //led
 1e2:	82 b9       	out	0x02, r24	; 2
	DDRA = 0xFF;
 1e4:	8a bb       	out	0x1a, r24	; 26
	PORTA = 0x00;
 1e6:	1b ba       	out	0x1b, r1	; 27
	PORTC = 0x00; //lcd
 1e8:	15 ba       	out	0x15, r1	; 21
	DDRE = 0x00; //스위치
 1ea:	12 b8       	out	0x02, r1	; 2
	
	unsigned char fnd[10] = {0xc0, 0xf9, 0xa4, 0xb0, 0x99, 0x92, 0x82, 0xd8, 0x80, 0x90};
	unsigned char digit, fnd_position=0x01;
	
	DDRB=0xFF;
 1ec:	87 bb       	out	0x17, r24	; 23
	DDRD=0x0F;
 1ee:	9f e0       	ldi	r25, 0x0F	; 15
 1f0:	91 bb       	out	0x11, r25	; 17
	PORTB=0xFF;
 1f2:	88 bb       	out	0x18, r24	; 24
	PORTD=0x0F;
 1f4:	92 bb       	out	0x12, r25	; 18
	
	LCD_INIT(); //lcd초기
 1f6:	93 df       	rcall	.-218    	; 0x11e <LCD_INIT>
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
	unsigned char sw4=0;
	unsigned char sw5=0;
	unsigned char sw6=0;
 1f8:	61 2c       	mov	r6, r1
{
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
	unsigned char sw4=0;
	unsigned char sw5=0;
 1fa:	71 2c       	mov	r7, r1
int main(void)
{
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
	unsigned char sw4=0;
 1fc:	81 2c       	mov	r8, r1

int main(void)
{
	unsigned char sw1=0;
	unsigned char sw2=0;
	unsigned char sw3=0;
 1fe:	91 2c       	mov	r9, r1


int main(void)
{
	unsigned char sw1=0;
	unsigned char sw2=0;
 200:	a1 2c       	mov	r10, r1
}


int main(void)
{
	unsigned char sw1=0;
 202:	b1 2c       	mov	r11, r1
		
		
		sw7=0;
		countL = 0;
		//스위치
		if((PINE&0x01) == 0x00) {
 204:	08 99       	sbic	0x01, 0	; 1
 206:	03 c0       	rjmp	.+6      	; 0x20e <main+0x52>
			sw1 = 1 - sw1;
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	8b 19       	sub	r24, r11
 20c:	b8 2e       	mov	r11, r24
		}
		if((PINE&0x02) == 0x00) {
 20e:	09 99       	sbic	0x01, 1	; 1
 210:	03 c0       	rjmp	.+6      	; 0x218 <main+0x5c>
			sw2 = 1 - sw2;
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	8a 19       	sub	r24, r10
 216:	a8 2e       	mov	r10, r24
		}
		if((PINE&0x04) == 0x00) {
 218:	0a 99       	sbic	0x01, 2	; 1
 21a:	03 c0       	rjmp	.+6      	; 0x222 <main+0x66>
			sw3 = 1 - sw3;
 21c:	81 e0       	ldi	r24, 0x01	; 1
 21e:	89 19       	sub	r24, r9
 220:	98 2e       	mov	r9, r24
		}
		if((PINE&0x08) == 0x00) {
 222:	0b 99       	sbic	0x01, 3	; 1
 224:	03 c0       	rjmp	.+6      	; 0x22c <main+0x70>
			sw4 = 1 - sw4;
 226:	81 e0       	ldi	r24, 0x01	; 1
 228:	88 19       	sub	r24, r8
 22a:	88 2e       	mov	r8, r24
		}
		if((PINE&0x10) == 0x00) {
 22c:	0c 99       	sbic	0x01, 4	; 1
 22e:	03 c0       	rjmp	.+6      	; 0x236 <main+0x7a>
			sw5 = 1 - sw5;
 230:	81 e0       	ldi	r24, 0x01	; 1
 232:	87 19       	sub	r24, r7
 234:	78 2e       	mov	r7, r24
		}
		if((PINE&0x20) == 0x00) {
 236:	0d 99       	sbic	0x01, 5	; 1
 238:	03 c0       	rjmp	.+6      	; 0x240 <main+0x84>
			sw6 = 1 - sw6;
 23a:	81 e0       	ldi	r24, 0x01	; 1
 23c:	86 19       	sub	r24, r6
 23e:	68 2e       	mov	r6, r24
		}
		if((PINE&0x40) == 0x00) {
 240:	0e 9b       	sbis	0x01, 6	; 1
 242:	02 c0       	rjmp	.+4      	; 0x248 <main+0x8c>
			PORTB=fnd[digit];
			_delay_ms(1000);
		}*/
		
		
		sw7=0;
 244:	80 e0       	ldi	r24, 0x00	; 0
 246:	01 c0       	rjmp	.+2      	; 0x24a <main+0x8e>
		}
		if((PINE&0x20) == 0x00) {
			sw6 = 1 - sw6;
		}
		if((PINE&0x40) == 0x00) {
			sw7 = 1;
 248:	81 e0       	ldi	r24, 0x01	; 1
		}
		
		if(sw1 == 1){
 24a:	b1 e0       	ldi	r27, 0x01	; 1
 24c:	bb 12       	cpse	r11, r27
 24e:	0d c0       	rjmp	.+26     	; 0x26a <main+0xae>
			leds[0] = 1;
 250:	21 e0       	ldi	r18, 0x01	; 1
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	3a 83       	std	Y+2, r19	; 0x02
 256:	29 83       	std	Y+1, r18	; 0x01
			PORTA=0x01;
 258:	91 e0       	ldi	r25, 0x01	; 1
 25a:	9b bb       	out	0x1b, r25	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 25c:	ef e3       	ldi	r30, 0x3F	; 63
 25e:	ff e1       	ldi	r31, 0x1F	; 31
 260:	31 97       	sbiw	r30, 0x01	; 1
 262:	f1 f7       	brne	.-4      	; 0x260 <main+0xa4>
 264:	00 c0       	rjmp	.+0      	; 0x266 <main+0xaa>
 266:	00 00       	nop
 268:	0b c0       	rjmp	.+22     	; 0x280 <main+0xc4>
			_delay_ms(t);
		}
		else if(sw1 == 0) {
 26a:	b1 10       	cpse	r11, r1
 26c:	09 c0       	rjmp	.+18     	; 0x280 <main+0xc4>
			leds[0] = 0;
 26e:	1a 82       	std	Y+2, r1	; 0x02
 270:	19 82       	std	Y+1, r1	; 0x01
			PORTA = 0x00;
 272:	1b ba       	out	0x1b, r1	; 27
 274:	af e3       	ldi	r26, 0x3F	; 63
 276:	bf e1       	ldi	r27, 0x1F	; 31
 278:	11 97       	sbiw	r26, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <main+0xbc>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <main+0xc2>
 27e:	00 00       	nop
			_delay_ms(t);
		}	
		
		if(sw2 == 1){
 280:	b1 e0       	ldi	r27, 0x01	; 1
 282:	ab 12       	cpse	r10, r27
 284:	0d c0       	rjmp	.+26     	; 0x2a0 <main+0xe4>
			leds[1] = 1;
 286:	21 e0       	ldi	r18, 0x01	; 1
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	3c 83       	std	Y+4, r19	; 0x04
 28c:	2b 83       	std	Y+3, r18	; 0x03
			PORTA=0x02;
 28e:	92 e0       	ldi	r25, 0x02	; 2
 290:	9b bb       	out	0x1b, r25	; 27
 292:	ef e3       	ldi	r30, 0x3F	; 63
 294:	ff e1       	ldi	r31, 0x1F	; 31
 296:	31 97       	sbiw	r30, 0x01	; 1
 298:	f1 f7       	brne	.-4      	; 0x296 <main+0xda>
 29a:	00 c0       	rjmp	.+0      	; 0x29c <main+0xe0>
 29c:	00 00       	nop
 29e:	0b c0       	rjmp	.+22     	; 0x2b6 <main+0xfa>
			_delay_ms(t);
		}
		else if(sw2 == 0) {
 2a0:	a1 10       	cpse	r10, r1
 2a2:	09 c0       	rjmp	.+18     	; 0x2b6 <main+0xfa>
			leds[1] = 0;
 2a4:	1c 82       	std	Y+4, r1	; 0x04
 2a6:	1b 82       	std	Y+3, r1	; 0x03
			PORTA = 0x00;
 2a8:	1b ba       	out	0x1b, r1	; 27
 2aa:	af e3       	ldi	r26, 0x3F	; 63
 2ac:	bf e1       	ldi	r27, 0x1F	; 31
 2ae:	11 97       	sbiw	r26, 0x01	; 1
 2b0:	f1 f7       	brne	.-4      	; 0x2ae <main+0xf2>
 2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <main+0xf8>
 2b4:	00 00       	nop
			_delay_ms(t);
		}
		
		if(sw3 == 1){
 2b6:	b1 e0       	ldi	r27, 0x01	; 1
 2b8:	9b 12       	cpse	r9, r27
 2ba:	0d c0       	rjmp	.+26     	; 0x2d6 <main+0x11a>
			leds[2] = 1;
 2bc:	21 e0       	ldi	r18, 0x01	; 1
 2be:	30 e0       	ldi	r19, 0x00	; 0
 2c0:	3e 83       	std	Y+6, r19	; 0x06
 2c2:	2d 83       	std	Y+5, r18	; 0x05
			PORTA = 0x04;
 2c4:	94 e0       	ldi	r25, 0x04	; 4
 2c6:	9b bb       	out	0x1b, r25	; 27
 2c8:	ef e3       	ldi	r30, 0x3F	; 63
 2ca:	ff e1       	ldi	r31, 0x1F	; 31
 2cc:	31 97       	sbiw	r30, 0x01	; 1
 2ce:	f1 f7       	brne	.-4      	; 0x2cc <main+0x110>
 2d0:	00 c0       	rjmp	.+0      	; 0x2d2 <main+0x116>
 2d2:	00 00       	nop
 2d4:	0b c0       	rjmp	.+22     	; 0x2ec <main+0x130>
			_delay_ms(t);
		}
		else if(sw3 == 0) {
 2d6:	91 10       	cpse	r9, r1
 2d8:	09 c0       	rjmp	.+18     	; 0x2ec <main+0x130>
			leds[2] = 0;
 2da:	1e 82       	std	Y+6, r1	; 0x06
 2dc:	1d 82       	std	Y+5, r1	; 0x05
			PORTA = 0x00;
 2de:	1b ba       	out	0x1b, r1	; 27
 2e0:	af e3       	ldi	r26, 0x3F	; 63
 2e2:	bf e1       	ldi	r27, 0x1F	; 31
 2e4:	11 97       	sbiw	r26, 0x01	; 1
 2e6:	f1 f7       	brne	.-4      	; 0x2e4 <main+0x128>
 2e8:	00 c0       	rjmp	.+0      	; 0x2ea <main+0x12e>
 2ea:	00 00       	nop
			_delay_ms(t);
		}
		if(sw4 == 1){
 2ec:	b1 e0       	ldi	r27, 0x01	; 1
 2ee:	8b 12       	cpse	r8, r27
 2f0:	0d c0       	rjmp	.+26     	; 0x30c <main+0x150>
			leds[3] = 1;
 2f2:	21 e0       	ldi	r18, 0x01	; 1
 2f4:	30 e0       	ldi	r19, 0x00	; 0
 2f6:	38 87       	std	Y+8, r19	; 0x08
 2f8:	2f 83       	std	Y+7, r18	; 0x07
			PORTA = 0x08;
 2fa:	98 e0       	ldi	r25, 0x08	; 8
 2fc:	9b bb       	out	0x1b, r25	; 27
 2fe:	ef e3       	ldi	r30, 0x3F	; 63
 300:	ff e1       	ldi	r31, 0x1F	; 31
 302:	31 97       	sbiw	r30, 0x01	; 1
 304:	f1 f7       	brne	.-4      	; 0x302 <main+0x146>
 306:	00 c0       	rjmp	.+0      	; 0x308 <main+0x14c>
 308:	00 00       	nop
 30a:	0b c0       	rjmp	.+22     	; 0x322 <main+0x166>
			_delay_ms(t);
		}
		else if(sw4 == 0) {
 30c:	81 10       	cpse	r8, r1
 30e:	09 c0       	rjmp	.+18     	; 0x322 <main+0x166>
			leds[3] = 0;
 310:	18 86       	std	Y+8, r1	; 0x08
 312:	1f 82       	std	Y+7, r1	; 0x07
			PORTA = 0x00;
 314:	1b ba       	out	0x1b, r1	; 27
 316:	af e3       	ldi	r26, 0x3F	; 63
 318:	bf e1       	ldi	r27, 0x1F	; 31
 31a:	11 97       	sbiw	r26, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <main+0x15e>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <main+0x164>
 320:	00 00       	nop
			_delay_ms(t);
		}
		if(sw5 == 1){
 322:	b1 e0       	ldi	r27, 0x01	; 1
 324:	7b 12       	cpse	r7, r27
 326:	0d c0       	rjmp	.+26     	; 0x342 <main+0x186>
			leds[4] = 1;
 328:	21 e0       	ldi	r18, 0x01	; 1
 32a:	30 e0       	ldi	r19, 0x00	; 0
 32c:	3a 87       	std	Y+10, r19	; 0x0a
 32e:	29 87       	std	Y+9, r18	; 0x09
			PORTA = 0x10;
 330:	90 e1       	ldi	r25, 0x10	; 16
 332:	9b bb       	out	0x1b, r25	; 27
 334:	ef e3       	ldi	r30, 0x3F	; 63
 336:	ff e1       	ldi	r31, 0x1F	; 31
 338:	31 97       	sbiw	r30, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <main+0x17c>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <main+0x182>
 33e:	00 00       	nop
 340:	0b c0       	rjmp	.+22     	; 0x358 <main+0x19c>
			_delay_ms(t);
		}
		else if(sw5 == 0) {
 342:	71 10       	cpse	r7, r1
 344:	09 c0       	rjmp	.+18     	; 0x358 <main+0x19c>
			leds[4] = 0;
 346:	1a 86       	std	Y+10, r1	; 0x0a
 348:	19 86       	std	Y+9, r1	; 0x09
			PORTA = 0x00;
 34a:	1b ba       	out	0x1b, r1	; 27
 34c:	af e3       	ldi	r26, 0x3F	; 63
 34e:	bf e1       	ldi	r27, 0x1F	; 31
 350:	11 97       	sbiw	r26, 0x01	; 1
 352:	f1 f7       	brne	.-4      	; 0x350 <main+0x194>
 354:	00 c0       	rjmp	.+0      	; 0x356 <main+0x19a>
 356:	00 00       	nop
			_delay_ms(t);
		}
		if(sw6 == 1){
 358:	b1 e0       	ldi	r27, 0x01	; 1
 35a:	6b 12       	cpse	r6, r27
 35c:	0d c0       	rjmp	.+26     	; 0x378 <main+0x1bc>
			leds[5] = 1;
 35e:	21 e0       	ldi	r18, 0x01	; 1
 360:	30 e0       	ldi	r19, 0x00	; 0
 362:	3c 87       	std	Y+12, r19	; 0x0c
 364:	2b 87       	std	Y+11, r18	; 0x0b
			PORTA = 0x20;
 366:	90 e2       	ldi	r25, 0x20	; 32
 368:	9b bb       	out	0x1b, r25	; 27
 36a:	ef e3       	ldi	r30, 0x3F	; 63
 36c:	ff e1       	ldi	r31, 0x1F	; 31
 36e:	31 97       	sbiw	r30, 0x01	; 1
 370:	f1 f7       	brne	.-4      	; 0x36e <main+0x1b2>
 372:	00 c0       	rjmp	.+0      	; 0x374 <main+0x1b8>
 374:	00 00       	nop
 376:	0b c0       	rjmp	.+22     	; 0x38e <main+0x1d2>
			_delay_ms(t);
		}
		else if(sw6 == 0) {
 378:	61 10       	cpse	r6, r1
 37a:	09 c0       	rjmp	.+18     	; 0x38e <main+0x1d2>
			leds[5] = 0;
 37c:	1c 86       	std	Y+12, r1	; 0x0c
 37e:	1b 86       	std	Y+11, r1	; 0x0b
			PORTA = 0x00;
 380:	1b ba       	out	0x1b, r1	; 27
 382:	af e3       	ldi	r26, 0x3F	; 63
 384:	bf e1       	ldi	r27, 0x1F	; 31
 386:	11 97       	sbiw	r26, 0x01	; 1
 388:	f1 f7       	brne	.-4      	; 0x386 <main+0x1ca>
 38a:	00 c0       	rjmp	.+0      	; 0x38c <main+0x1d0>
 38c:	00 00       	nop
			_delay_ms(t);
		}
		//led off switch
		if(sw7 == 1){
 38e:	81 30       	cpi	r24, 0x01	; 1
 390:	31 f4       	brne	.+12     	; 0x39e <main+0x1e2>
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
			sw4 = 0;
			sw5 = 0;
			sw6 = 0;
 392:	61 2c       	mov	r6, r1
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
			sw4 = 0;
			sw5 = 0;
 394:	71 2c       	mov	r7, r1
		//led off switch
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
			sw4 = 0;
 396:	81 2c       	mov	r8, r1
		}
		//led off switch
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
			sw3 = 0;
 398:	91 2c       	mov	r9, r1
			_delay_ms(t);
		}
		//led off switch
		if(sw7 == 1){
			sw1 = 0;
			sw2 = 0;
 39a:	a1 2c       	mov	r10, r1
			PORTA = 0x00;
			_delay_ms(t);
		}
		//led off switch
		if(sw7 == 1){
			sw1 = 0;
 39c:	b1 2c       	mov	r11, r1
			PORTA = 0xFF; //A8
		} else{ //상태 led 끄기
			PORTA = 0xFF;
		}*/
		
		for(int i = 0; i < 8; i++){
 39e:	80 e0       	ldi	r24, 0x00	; 0
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	1d c0       	rjmp	.+58     	; 0x3de <main+0x222>
			if(leds[i] == 1) {
 3a4:	fc 01       	movw	r30, r24
 3a6:	ee 0f       	add	r30, r30
 3a8:	ff 1f       	adc	r31, r31
 3aa:	21 e0       	ldi	r18, 0x01	; 1
 3ac:	30 e0       	ldi	r19, 0x00	; 0
 3ae:	2c 0f       	add	r18, r28
 3b0:	3d 1f       	adc	r19, r29
 3b2:	e2 0f       	add	r30, r18
 3b4:	f3 1f       	adc	r31, r19
 3b6:	20 81       	ld	r18, Z
 3b8:	31 81       	ldd	r19, Z+1	; 0x01
 3ba:	21 30       	cpi	r18, 0x01	; 1
 3bc:	31 05       	cpc	r19, r1
 3be:	71 f4       	brne	.+28     	; 0x3dc <main+0x220>
				PORTA = 0x40;
 3c0:	80 e4       	ldi	r24, 0x40	; 64
 3c2:	8b bb       	out	0x1b, r24	; 27
 3c4:	8f e3       	ldi	r24, 0x3F	; 63
 3c6:	9f e1       	ldi	r25, 0x1F	; 31
 3c8:	01 97       	sbiw	r24, 0x01	; 1
 3ca:	f1 f7       	brne	.-4      	; 0x3c8 <main+0x20c>
 3cc:	00 c0       	rjmp	.+0      	; 0x3ce <main+0x212>
 3ce:	00 00       	nop
			PORTA = 0xFF; //A8
		} else{ //상태 led 끄기
			PORTA = 0xFF;
		}*/
		
		for(int i = 0; i < 8; i++){
 3d0:	05 e0       	ldi	r16, 0x05	; 5
 3d2:	10 e0       	ldi	r17, 0x00	; 0
 3d4:	c1 2c       	mov	r12, r1
 3d6:	d1 2c       	mov	r13, r1
 3d8:	76 01       	movw	r14, r12
 3da:	29 c0       	rjmp	.+82     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3dc:	01 96       	adiw	r24, 0x01	; 1
 3de:	88 30       	cpi	r24, 0x08	; 8
 3e0:	91 05       	cpc	r25, r1
 3e2:	04 f3       	brlt	.-64     	; 0x3a4 <main+0x1e8>
 3e4:	f5 cf       	rjmp	.-22     	; 0x3d0 <main+0x214>
		}
		
		//lcd에 on/off 출력
		for(int l = 5; l >= 0; l--){
			
			MOVE(1,11-l);
 3e6:	6b e0       	ldi	r22, 0x0B	; 11
 3e8:	70 e0       	ldi	r23, 0x00	; 0
 3ea:	60 1b       	sub	r22, r16
 3ec:	71 0b       	sbc	r23, r17
 3ee:	81 e0       	ldi	r24, 0x01	; 1
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	8c de       	rcall	.-744    	; 0x10c <MOVE>
			if(leds[l] == 1){
 3f4:	f8 01       	movw	r30, r16
 3f6:	ee 0f       	add	r30, r30
 3f8:	ff 1f       	adc	r31, r31
 3fa:	a1 e0       	ldi	r26, 0x01	; 1
 3fc:	b0 e0       	ldi	r27, 0x00	; 0
 3fe:	ac 0f       	add	r26, r28
 400:	bd 1f       	adc	r27, r29
 402:	ea 0f       	add	r30, r26
 404:	fb 1f       	adc	r31, r27
 406:	80 81       	ld	r24, Z
 408:	91 81       	ldd	r25, Z+1	; 0x01
 40a:	01 97       	sbiw	r24, 0x01	; 1
				DATA('O');
 40c:	61 f4       	brne	.+24     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 40e:	8f e4       	ldi	r24, 0x4F	; 79
 410:	9e de       	rcall	.-708    	; 0x14e <DATA>
				countL++;
 412:	20 e0       	ldi	r18, 0x00	; 0
 414:	30 e0       	ldi	r19, 0x00	; 0
 416:	40 e8       	ldi	r20, 0x80	; 128
 418:	5f e3       	ldi	r21, 0x3F	; 63
 41a:	c7 01       	movw	r24, r14
 41c:	b6 01       	movw	r22, r12
 41e:	46 d0       	rcall	.+140    	; 0x4ac <__addsf3>
 420:	6b 01       	movw	r12, r22
 422:	7c 01       	movw	r14, r24
			}
			else{
				DATA('X');
 424:	02 c0       	rjmp	.+4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 426:	88 e5       	ldi	r24, 0x58	; 88
 428:	92 de       	rcall	.-732    	; 0x14e <DATA>
				break;
			}
		}
		
		//lcd에 on/off 출력
		for(int l = 5; l >= 0; l--){
 42a:	01 50       	subi	r16, 0x01	; 1
 42c:	11 09       	sbc	r17, r1
 42e:	11 23       	and	r17, r17
			}
			
		}
		
		
		MOVE(2, 1);
 430:	d4 f6       	brge	.-76     	; 0x3e6 <main+0x22a>
 432:	61 e0       	ldi	r22, 0x01	; 1
 434:	70 e0       	ldi	r23, 0x00	; 0
 436:	82 e0       	ldi	r24, 0x02	; 2
		DATA('U');
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	68 de       	rcall	.-816    	; 0x10c <MOVE>
		DATA('s');
 43c:	85 e5       	ldi	r24, 0x55	; 85
 43e:	87 de       	rcall	.-754    	; 0x14e <DATA>
		DATA('i');
 440:	83 e7       	ldi	r24, 0x73	; 115
 442:	85 de       	rcall	.-758    	; 0x14e <DATA>
		DATA('n');
 444:	89 e6       	ldi	r24, 0x69	; 105
 446:	83 de       	rcall	.-762    	; 0x14e <DATA>
		DATA('g');
 448:	8e e6       	ldi	r24, 0x6E	; 110
 44a:	81 de       	rcall	.-766    	; 0x14e <DATA>
		DATA(' ');
 44c:	87 e6       	ldi	r24, 0x67	; 103
 44e:	7f de       	rcall	.-770    	; 0x14e <DATA>
		DATA('E');
 450:	80 e2       	ldi	r24, 0x20	; 32
 452:	7d de       	rcall	.-774    	; 0x14e <DATA>
		DATA('l');
 454:	85 e4       	ldi	r24, 0x45	; 69
 456:	7b de       	rcall	.-778    	; 0x14e <DATA>
		DATA('e');
 458:	8c e6       	ldi	r24, 0x6C	; 108
 45a:	79 de       	rcall	.-782    	; 0x14e <DATA>
		DATA('c');
 45c:	85 e6       	ldi	r24, 0x65	; 101
 45e:	77 de       	rcall	.-786    	; 0x14e <DATA>
 460:	83 e6       	ldi	r24, 0x63	; 99
		DATA(':');
 462:	75 de       	rcall	.-790    	; 0x14e <DATA>
 464:	8a e3       	ldi	r24, 0x3A	; 58
		MOVE(2, 13);
 466:	73 de       	rcall	.-794    	; 0x14e <DATA>
 468:	6d e0       	ldi	r22, 0x0D	; 13
 46a:	70 e0       	ldi	r23, 0x00	; 0
 46c:	82 e0       	ldi	r24, 0x02	; 2
		DATA('0');
 46e:	90 e0       	ldi	r25, 0x00	; 0
 470:	4d de       	rcall	.-870    	; 0x10c <MOVE>
 472:	80 e3       	ldi	r24, 0x30	; 48
		DATA('.');
 474:	6c de       	rcall	.-808    	; 0x14e <DATA>
 476:	8e e2       	ldi	r24, 0x2E	; 46
 478:	6a de       	rcall	.-812    	; 0x14e <DATA>
		DATA(countL+0x30);
 47a:	20 e0       	ldi	r18, 0x00	; 0
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	40 e4       	ldi	r20, 0x40	; 64
 480:	52 e4       	ldi	r21, 0x42	; 66
 482:	c7 01       	movw	r24, r14
 484:	b6 01       	movw	r22, r12
 486:	12 d0       	rcall	.+36     	; 0x4ac <__addsf3>
 488:	75 d0       	rcall	.+234    	; 0x574 <__fixunssfsi>
 48a:	86 2f       	mov	r24, r22
 48c:	60 de       	rcall	.-832    	; 0x14e <DATA>
 48e:	87 e5       	ldi	r24, 0x57	; 87
 490:	5e de       	rcall	.-836    	; 0x14e <DATA>
		
		DATA('W');
 492:	bf ef       	ldi	r27, 0xFF	; 255
 494:	ed ee       	ldi	r30, 0xED	; 237
 496:	f2 e0       	ldi	r31, 0x02	; 2
 498:	b1 50       	subi	r27, 0x01	; 1
 49a:	e0 40       	sbci	r30, 0x00	; 0
 49c:	f0 40       	sbci	r31, 0x00	; 0
 49e:	e1 f7       	brne	.-8      	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 4a0:	00 c0       	rjmp	.+0      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 4a2:	00 00       	nop
 4a4:	81 e0       	ldi	r24, 0x01	; 1
 4a6:	fb dd       	rcall	.-1034   	; 0x9e <COMMAND>
 4a8:	ad ce       	rjmp	.-678    	; 0x204 <main+0x48>

000004aa <__subsf3>:
		_delay_ms(60);
		COMMAND(0b00000001);
 4aa:	50 58       	subi	r21, 0x80	; 128

000004ac <__addsf3>:
 4ac:	bb 27       	eor	r27, r27
 4ae:	aa 27       	eor	r26, r26
		
	}	
 4b0:	0e d0       	rcall	.+28     	; 0x4ce <__addsf3x>
 4b2:	a3 c0       	rjmp	.+326    	; 0x5fa <__fp_round>
 4b4:	94 d0       	rcall	.+296    	; 0x5de <__fp_pscA>
 4b6:	30 f0       	brcs	.+12     	; 0x4c4 <__addsf3+0x18>
 4b8:	99 d0       	rcall	.+306    	; 0x5ec <__fp_pscB>
 4ba:	20 f0       	brcs	.+8      	; 0x4c4 <__addsf3+0x18>
 4bc:	31 f4       	brne	.+12     	; 0x4ca <__addsf3+0x1e>
 4be:	9f 3f       	cpi	r25, 0xFF	; 255
 4c0:	11 f4       	brne	.+4      	; 0x4c6 <__addsf3+0x1a>
 4c2:	1e f4       	brtc	.+6      	; 0x4ca <__addsf3+0x1e>
 4c4:	89 c0       	rjmp	.+274    	; 0x5d8 <__fp_nan>
 4c6:	0e f4       	brtc	.+2      	; 0x4ca <__addsf3+0x1e>
 4c8:	e0 95       	com	r30
 4ca:	e7 fb       	bst	r30, 7
 4cc:	7f c0       	rjmp	.+254    	; 0x5cc <__fp_inf>

000004ce <__addsf3x>:
 4ce:	e9 2f       	mov	r30, r25
 4d0:	a5 d0       	rcall	.+330    	; 0x61c <__fp_split3>
 4d2:	80 f3       	brcs	.-32     	; 0x4b4 <__addsf3+0x8>
 4d4:	ba 17       	cp	r27, r26
 4d6:	62 07       	cpc	r22, r18
 4d8:	73 07       	cpc	r23, r19
 4da:	84 07       	cpc	r24, r20
 4dc:	95 07       	cpc	r25, r21
 4de:	18 f0       	brcs	.+6      	; 0x4e6 <__addsf3x+0x18>
 4e0:	71 f4       	brne	.+28     	; 0x4fe <__addsf3x+0x30>
 4e2:	9e f5       	brtc	.+102    	; 0x54a <__addsf3x+0x7c>
 4e4:	bd c0       	rjmp	.+378    	; 0x660 <__fp_zero>
 4e6:	0e f4       	brtc	.+2      	; 0x4ea <__addsf3x+0x1c>
 4e8:	e0 95       	com	r30
 4ea:	0b 2e       	mov	r0, r27
 4ec:	ba 2f       	mov	r27, r26
 4ee:	a0 2d       	mov	r26, r0
 4f0:	0b 01       	movw	r0, r22
 4f2:	b9 01       	movw	r22, r18
 4f4:	90 01       	movw	r18, r0
 4f6:	0c 01       	movw	r0, r24
 4f8:	ca 01       	movw	r24, r20
 4fa:	a0 01       	movw	r20, r0
 4fc:	11 24       	eor	r1, r1
 4fe:	ff 27       	eor	r31, r31
 500:	59 1b       	sub	r21, r25
 502:	99 f0       	breq	.+38     	; 0x52a <__addsf3x+0x5c>
 504:	59 3f       	cpi	r21, 0xF9	; 249
 506:	50 f4       	brcc	.+20     	; 0x51c <__addsf3x+0x4e>
 508:	50 3e       	cpi	r21, 0xE0	; 224
 50a:	68 f1       	brcs	.+90     	; 0x566 <__addsf3x+0x98>
 50c:	1a 16       	cp	r1, r26
 50e:	f0 40       	sbci	r31, 0x00	; 0
 510:	a2 2f       	mov	r26, r18
 512:	23 2f       	mov	r18, r19
 514:	34 2f       	mov	r19, r20
 516:	44 27       	eor	r20, r20
 518:	58 5f       	subi	r21, 0xF8	; 248
 51a:	f3 cf       	rjmp	.-26     	; 0x502 <__addsf3x+0x34>
 51c:	46 95       	lsr	r20
 51e:	37 95       	ror	r19
 520:	27 95       	ror	r18
 522:	a7 95       	ror	r26
 524:	f0 40       	sbci	r31, 0x00	; 0
 526:	53 95       	inc	r21
 528:	c9 f7       	brne	.-14     	; 0x51c <__addsf3x+0x4e>
 52a:	7e f4       	brtc	.+30     	; 0x54a <__addsf3x+0x7c>
 52c:	1f 16       	cp	r1, r31
 52e:	ba 0b       	sbc	r27, r26
 530:	62 0b       	sbc	r22, r18
 532:	73 0b       	sbc	r23, r19
 534:	84 0b       	sbc	r24, r20
 536:	ba f0       	brmi	.+46     	; 0x566 <__addsf3x+0x98>
 538:	91 50       	subi	r25, 0x01	; 1
 53a:	a1 f0       	breq	.+40     	; 0x564 <__addsf3x+0x96>
 53c:	ff 0f       	add	r31, r31
 53e:	bb 1f       	adc	r27, r27
 540:	66 1f       	adc	r22, r22
 542:	77 1f       	adc	r23, r23
 544:	88 1f       	adc	r24, r24
 546:	c2 f7       	brpl	.-16     	; 0x538 <__addsf3x+0x6a>
 548:	0e c0       	rjmp	.+28     	; 0x566 <__addsf3x+0x98>
 54a:	ba 0f       	add	r27, r26
 54c:	62 1f       	adc	r22, r18
 54e:	73 1f       	adc	r23, r19
 550:	84 1f       	adc	r24, r20
 552:	48 f4       	brcc	.+18     	; 0x566 <__addsf3x+0x98>
 554:	87 95       	ror	r24
 556:	77 95       	ror	r23
 558:	67 95       	ror	r22
 55a:	b7 95       	ror	r27
 55c:	f7 95       	ror	r31
 55e:	9e 3f       	cpi	r25, 0xFE	; 254
 560:	08 f0       	brcs	.+2      	; 0x564 <__addsf3x+0x96>
 562:	b3 cf       	rjmp	.-154    	; 0x4ca <__addsf3+0x1e>
 564:	93 95       	inc	r25
 566:	88 0f       	add	r24, r24
 568:	08 f0       	brcs	.+2      	; 0x56c <__addsf3x+0x9e>
 56a:	99 27       	eor	r25, r25
 56c:	ee 0f       	add	r30, r30
 56e:	97 95       	ror	r25
 570:	87 95       	ror	r24
 572:	08 95       	ret

00000574 <__fixunssfsi>:
 574:	5b d0       	rcall	.+182    	; 0x62c <__fp_splitA>
 576:	88 f0       	brcs	.+34     	; 0x59a <__fixunssfsi+0x26>
 578:	9f 57       	subi	r25, 0x7F	; 127
 57a:	90 f0       	brcs	.+36     	; 0x5a0 <__fixunssfsi+0x2c>
 57c:	b9 2f       	mov	r27, r25
 57e:	99 27       	eor	r25, r25
 580:	b7 51       	subi	r27, 0x17	; 23
 582:	a0 f0       	brcs	.+40     	; 0x5ac <__fixunssfsi+0x38>
 584:	d1 f0       	breq	.+52     	; 0x5ba <__fixunssfsi+0x46>
 586:	66 0f       	add	r22, r22
 588:	77 1f       	adc	r23, r23
 58a:	88 1f       	adc	r24, r24
 58c:	99 1f       	adc	r25, r25
 58e:	1a f0       	brmi	.+6      	; 0x596 <__fixunssfsi+0x22>
 590:	ba 95       	dec	r27
 592:	c9 f7       	brne	.-14     	; 0x586 <__fixunssfsi+0x12>
 594:	12 c0       	rjmp	.+36     	; 0x5ba <__fixunssfsi+0x46>
 596:	b1 30       	cpi	r27, 0x01	; 1
 598:	81 f0       	breq	.+32     	; 0x5ba <__fixunssfsi+0x46>
 59a:	62 d0       	rcall	.+196    	; 0x660 <__fp_zero>
 59c:	b1 e0       	ldi	r27, 0x01	; 1
 59e:	08 95       	ret
 5a0:	5f c0       	rjmp	.+190    	; 0x660 <__fp_zero>
 5a2:	67 2f       	mov	r22, r23
 5a4:	78 2f       	mov	r23, r24
 5a6:	88 27       	eor	r24, r24
 5a8:	b8 5f       	subi	r27, 0xF8	; 248
 5aa:	39 f0       	breq	.+14     	; 0x5ba <__fixunssfsi+0x46>
 5ac:	b9 3f       	cpi	r27, 0xF9	; 249
 5ae:	cc f3       	brlt	.-14     	; 0x5a2 <__fixunssfsi+0x2e>
 5b0:	86 95       	lsr	r24
 5b2:	77 95       	ror	r23
 5b4:	67 95       	ror	r22
 5b6:	b3 95       	inc	r27
 5b8:	d9 f7       	brne	.-10     	; 0x5b0 <__fixunssfsi+0x3c>
 5ba:	3e f4       	brtc	.+14     	; 0x5ca <__fixunssfsi+0x56>
 5bc:	90 95       	com	r25
 5be:	80 95       	com	r24
 5c0:	70 95       	com	r23
 5c2:	61 95       	neg	r22
 5c4:	7f 4f       	sbci	r23, 0xFF	; 255
 5c6:	8f 4f       	sbci	r24, 0xFF	; 255
 5c8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ca:	08 95       	ret

000005cc <__fp_inf>:
 5cc:	97 f9       	bld	r25, 7
 5ce:	9f 67       	ori	r25, 0x7F	; 127
 5d0:	80 e8       	ldi	r24, 0x80	; 128
 5d2:	70 e0       	ldi	r23, 0x00	; 0
 5d4:	60 e0       	ldi	r22, 0x00	; 0
 5d6:	08 95       	ret

000005d8 <__fp_nan>:
 5d8:	9f ef       	ldi	r25, 0xFF	; 255
 5da:	80 ec       	ldi	r24, 0xC0	; 192
 5dc:	08 95       	ret

000005de <__fp_pscA>:
 5de:	00 24       	eor	r0, r0
 5e0:	0a 94       	dec	r0
 5e2:	16 16       	cp	r1, r22
 5e4:	17 06       	cpc	r1, r23
 5e6:	18 06       	cpc	r1, r24
 5e8:	09 06       	cpc	r0, r25
 5ea:	08 95       	ret

000005ec <__fp_pscB>:
 5ec:	00 24       	eor	r0, r0
 5ee:	0a 94       	dec	r0
 5f0:	12 16       	cp	r1, r18
 5f2:	13 06       	cpc	r1, r19
 5f4:	14 06       	cpc	r1, r20
 5f6:	05 06       	cpc	r0, r21
 5f8:	08 95       	ret

000005fa <__fp_round>:
 5fa:	09 2e       	mov	r0, r25
 5fc:	03 94       	inc	r0
 5fe:	00 0c       	add	r0, r0
 600:	11 f4       	brne	.+4      	; 0x606 <__fp_round+0xc>
 602:	88 23       	and	r24, r24
 604:	52 f0       	brmi	.+20     	; 0x61a <__fp_round+0x20>
 606:	bb 0f       	add	r27, r27
 608:	40 f4       	brcc	.+16     	; 0x61a <__fp_round+0x20>
 60a:	bf 2b       	or	r27, r31
 60c:	11 f4       	brne	.+4      	; 0x612 <__fp_round+0x18>
 60e:	60 ff       	sbrs	r22, 0
 610:	04 c0       	rjmp	.+8      	; 0x61a <__fp_round+0x20>
 612:	6f 5f       	subi	r22, 0xFF	; 255
 614:	7f 4f       	sbci	r23, 0xFF	; 255
 616:	8f 4f       	sbci	r24, 0xFF	; 255
 618:	9f 4f       	sbci	r25, 0xFF	; 255
 61a:	08 95       	ret

0000061c <__fp_split3>:
 61c:	57 fd       	sbrc	r21, 7
 61e:	90 58       	subi	r25, 0x80	; 128
 620:	44 0f       	add	r20, r20
 622:	55 1f       	adc	r21, r21
 624:	59 f0       	breq	.+22     	; 0x63c <__fp_splitA+0x10>
 626:	5f 3f       	cpi	r21, 0xFF	; 255
 628:	71 f0       	breq	.+28     	; 0x646 <__fp_splitA+0x1a>
 62a:	47 95       	ror	r20

0000062c <__fp_splitA>:
 62c:	88 0f       	add	r24, r24
 62e:	97 fb       	bst	r25, 7
 630:	99 1f       	adc	r25, r25
 632:	61 f0       	breq	.+24     	; 0x64c <__fp_splitA+0x20>
 634:	9f 3f       	cpi	r25, 0xFF	; 255
 636:	79 f0       	breq	.+30     	; 0x656 <__fp_splitA+0x2a>
 638:	87 95       	ror	r24
 63a:	08 95       	ret
 63c:	12 16       	cp	r1, r18
 63e:	13 06       	cpc	r1, r19
 640:	14 06       	cpc	r1, r20
 642:	55 1f       	adc	r21, r21
 644:	f2 cf       	rjmp	.-28     	; 0x62a <__fp_split3+0xe>
 646:	46 95       	lsr	r20
 648:	f1 df       	rcall	.-30     	; 0x62c <__fp_splitA>
 64a:	08 c0       	rjmp	.+16     	; 0x65c <__fp_splitA+0x30>
 64c:	16 16       	cp	r1, r22
 64e:	17 06       	cpc	r1, r23
 650:	18 06       	cpc	r1, r24
 652:	99 1f       	adc	r25, r25
 654:	f1 cf       	rjmp	.-30     	; 0x638 <__fp_splitA+0xc>
 656:	86 95       	lsr	r24
 658:	71 05       	cpc	r23, r1
 65a:	61 05       	cpc	r22, r1
 65c:	08 94       	sec
 65e:	08 95       	ret

00000660 <__fp_zero>:
 660:	e8 94       	clt

00000662 <__fp_szero>:
 662:	bb 27       	eor	r27, r27
 664:	66 27       	eor	r22, r22
 666:	77 27       	eor	r23, r23
 668:	cb 01       	movw	r24, r22
 66a:	97 f9       	bld	r25, 7
 66c:	08 95       	ret

0000066e <_exit>:
 66e:	f8 94       	cli

00000670 <__stop_program>:
 670:	ff cf       	rjmp	.-2      	; 0x670 <__stop_program>
